@model mechanical.Models.Dto.CollateralDto.CollateralPostDto;
@{
    var myCase = ViewData["case"] as CaseReturntDto;
    var caseSchedule = ViewData["CaseSchedule"] as IEnumerable<mechanical.Models.Dto.CaseScheduleDto.CaseScheduleReturnDto>;
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h4>Case Detail</h4>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active"><a href="@Url.Action("MyCases", "Case")">My Case</a></li>
                    <li class="breadcrumb-item active">Case Detail</li>
                </ol>
            </div>
        </div>
    </div>
</section>
<section class="content">
    <div class="container-fluid">
        <div class="card card-purple card-outline card-outline-tabs">
            <div class="card-header p-0 border-bottom-0">
                <ul class="nav nav-tabs" id="custom-tabs-four-tab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-four-home-tab" data-toggle="pill" href="#custom-tabs-four-home" role="tab" aria-controls="custom-tabs-four-home" aria-selected="true"><i class="nav-icon fas fa-home"></i>  General Inforamtion</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" id="custom-tabs-four-profile-tab" data-toggle="pill" href="#custom-tabs-four-profile" role="tab" aria-controls="custom-tabs-four-profile" aria-selected="false"><i class="nav-icon fas fa-file"></i> Collaterals Informations</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-four-messages-tab" data-toggle="pill" href="#custom-tabs-four-messages" role="tab" aria-controls="custom-tabs-four-messages" aria-selected="false"><i class="nav-icon fas fa-calendar-alt"></i> Schedule</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-four-settings-tab" data-toggle="pill" href="#custom-tabs-four-settings" role="tab" aria-controls="custom-tabs-four-settings" aria-selected="false">
                            <i class="fas fa-comments"> </i>
                            Comments <span class="badge badge-warning right CommentBage"> </span>
                        </a>
                    </li>
                </ul>
            </div>
            <div class="card-body">
                <div class="tab-content" id="custom-tabs-four-tabContent">
                    <div class="tab-pane fade " id="custom-tabs-four-home" role="tabpanel" aria-labelledby="custom-tabs-four-home-tab">
                        @await Html.PartialAsync("_GeneralInfo")
                    </div>
                    <div class="tab-pane fade show active" id="custom-tabs-four-profile" role="tabpanel" aria-labelledby="custom-tabs-four-profile-tab">
                        @await Html.PartialAsync("_CreateCollateral")
                    </div>
                    <div class="tab-pane fade" id="custom-tabs-four-messages" role="tabpanel" aria-labelledby="custom-tabs-four-messages-tab">
                        @await Html.PartialAsync("_CaseSchedule")
                    </div>
                    <div class="tab-pane fade" id="custom-tabs-four-settings" role="tabpanel" aria-labelledby="custom-tabs-four-settings-tab">
                        @await Html.PartialAsync("_CaseComment")
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
@section Scripts {
    <script src="~/lib/datatable/js/jquery.datatables.min.js"></script>
    <script src="~/lib/datatable/js/datatables.bootstrap4.min.js"></script>
    <script src="~/lib/datatable/js/datatables.responsive.min.js"></script>
    <script src="~/lib/datatable/js/responsive.bootstrap4.min.js"></script>
    <script src="~/lib/datatable/js/datatables.buttons.min.js"></script>
    <script src="~/lib/datatable/js/buttons.bootstrap4.min.js"></script>
    <script src="~/lib/datatable/js/jszip.min.js"></script>
    <script src="~/lib/datatable/js/pdfmake.min.js"></script>
    <script src="~/lib/datatable/js/vfs_fonts.js"></script>
    <script src="~/lib/datatable/js/buttons.html5.min.js"></script>
    <script src="~/lib/datatable/js/buttons.print.min.js"></script>
    <script src="~/lib/datatable/js/buttons.colvis.min.js"></script>
    <script src="~/lib/toastr/toastr.min.js"></script>
    <script>
        $(document).ready(function () {
            var CaseId = $('#CaseId').val();



            function initializeDataTable(data) {
                caseCollateralsTable = $('#caseCollaterals').DataTable({
                    language: {
                        emptyTable: "There is no collateral register for this case"
                    },
                    responsive: true,
                    pageLength: 5,
                    lengthChange: false,
                    autoWidth: false,
                    buttons: ["copy", "csv", "excel", { extend: 'pdf', title: 'My Case - pdf' }, { extend: 'print', title: 'My Case - Print' }, "colvis"],
                    data: data,
                    columns: [
                        { data: 'PropertyOwner', width: '20%' },
                        { data: 'Role', width: '15%' },
                        { data: 'Category', width: '25%' },
                        { data: 'Type', width: '25%' },
                        {
                            data: 'Id',
                            width: '15%',
                            render: function (data, type, row, meta) {
                                return '<a href="@Url.Action("Detail", "Collateral")?Id=' + data + '">Details</a>';
                            }
                        }

                    ]
                }).buttons().container().appendTo('#caseCollaterals_wrapper .col-md-6:eq(0)');
            }

            function loadCollaterals() {

                $.ajax({
                    url: '/Collateral/GetRemarkCollaterals?CaseId=' + CaseId,
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        if ($.fn.DataTable.isDataTable('#caseCollaterals')) {
                            var caseCollateralsTable = $('#caseCollaterals').DataTable();
                            caseCollateralsTable.destroy();
                        }
                        initializeDataTable(data);
                    },
                    error: function (error) {
                        toastr.error("Failed to load collaterals");
                        console.log(error);
                    }
                });
            }

            loadCollaterals();
            function loadComments() {
                $.ajax({
                    url: '/CaseComment/GetCaseComments?caseId=' + CaseId,
                    method: 'GET',
                    success: function (data) {
                        var currentUserID = data.userId;
                        var caseComments = data.caseComments;
                        var countComment = data.caseComments.length;
                        $(".CommentBage").text(countComment);
                        console.log(countComment);
                        var users = [];

                        if (caseComments && caseComments.length > 0) {
                            caseComments.forEach(function (comment) {
                                var chatMsg = $('<div>').addClass('direct-chat-msg');
                                var chatInfos = $('<div>').addClass('direct-chat-infos clearfix');
                                var chatName = $('<a>');

                                var chatImg = $('<a>');
                                var chatImgInner = $('<img>').attr('src', '/img/avatar5.png').addClass('direct-chat-img');
                                var chatText = $('<div>').addClass('direct-chat-text');

                                chatName.attr('href', '/UserManagment/Profile/' + comment.AuthorId);
                                chatImg.attr('href', '/UserManagment/Profile/' + comment.AuthorId);
                                chatImg.append(chatImgInner);

                                var createdAt = new Date(comment.CreatedAt);


                                chatText.text(comment.Content);

                                if (comment.AuthorId === currentUserID) {
                                    var chatTimestamp = $('<span>').addClass('direct-chat-timestamp');
                                    $('<span>').addClass('direct-chat-name float-right').text(comment.AuthorName).appendTo(chatName);
                                    chatMsg.addClass('right');
                                } else {
                                    var chatTimestamp = $('<span>').addClass('direct-chat-timestamp float-right');
                                    $('<span>').addClass('direct-chat-name').text(comment.AuthorName).appendTo(chatName);
                                }
                                var formattedDate = formatDate(createdAt);
                                chatTimestamp.text(formattedDate);

                                chatInfos.append(chatName, chatTimestamp);
                                chatMsg.append(chatInfos, chatImg, chatText);
                                $('.direct-chat-messages').append(chatMsg);

                                var existingUser = users.find(function (user) {
                                    return user.id === comment.AuthorId;
                                });

                                if (!existingUser) {
                                    var newUser = {
                                        id: comment.AuthorId,
                                        name: comment.AuthorName,
                                        avatar: '/img/avatar5.png',
                                        lastMessage: comment.Content,
                                        date: formattedDate
                                    };
                                    users.push(newUser);
                                }
                            });
                            populateContactList(users);
                        } else {
                            var noCommentsMsg = $('<div>').addClass('no-comments-msg').text('There are no comments related to this case.');
                            $('.direct-chat-messages').append(noCommentsMsg);
                        }
                    },
                    error: function () {
                        console.log('An error occurred while retrieving case comments.');
                    }
                });
            }
            function populateContactList(users) {
                var contactList = $('.contacts-list');
                contactList.empty();

                users.forEach(function (user) {
                    var listItem = $('<li>');
                    var link = $('<a>').attr('href', '/UserManagment/Profile/' + user.id);
                    var avatarImg = $('<img>').addClass('contacts-list-img').attr('src', user.avatar);
                    var infoDiv = $('<div>').addClass('contacts-list-info');
                    var nameSpan = $('<span>').addClass('contacts-list-name').text(user.name);
                    var dateSpan = $('<small>').addClass('contacts-list-date float-right').text(formatDate(user.date));
                    var messageSpan = $('<span>').addClass('contacts-list-msg').text(user.lastMessage);

                    infoDiv.append(nameSpan, dateSpan);
                    link.append(avatarImg, infoDiv, messageSpan);
                    listItem.append(link);
                    contactList.append(listItem);
                });
            }
            function formatDate(date) {
                var options = { year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric', hour12: true };
                return date.toLocaleString('en-US', options);
            }

            loadComments();

            function sendMessage(message, CaseId) {
                var requestData = {
                    Content: message,
                    CaseId: CaseId
                };

                $.ajax({
                    url: '/CaseComment/CreateCaseComment',
                    method: 'POST',
                    data: requestData,
                    success: function (response) {
                        console.log(response);
                        $('#messageinput').val('');
                        var chatMessages = $('.direct-chat-messages');
                        var scrollHeight = chatMessages[0].scrollHeight;
                        chatMessages.scrollTop(scrollHeight);
                    },
                    error: function () {
                        console.log('Error while sending the message.');
                    }
                });
            }

            $('#SendButton').click(function (e) {
                e.preventDefault();
                var message = $('input[name="message"]').val();
                if (message.trim() !== '') {
                    // Send the message
                    sendMessage(message, CaseId);
                    location.reload();
                    $('.nav-tabs a[href="#custom-tabs-four-settings"]').tab('show');
                    // loadComments();
                    var chatMessages = $('.direct-chat-messages');
                    var scrollHeight = chatMessages[0].scrollHeight;
                    chatMessages.scrollTop(scrollHeight);
                }
            });
        });

    </script>
}