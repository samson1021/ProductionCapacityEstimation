<script src="~/lib/datatable/js/jquery.datatables.min.js"></script>
<script src="~/lib/datatable/js/datatables.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/datatables.responsive.min.js"></script>
<script src="~/lib/datatable/js/responsive.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/datatables.buttons.min.js"></script>
<script src="~/lib/datatable/js/buttons.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/jszip.min.js"></script>
<script src="~/lib/datatable/js/pdfmake.min.js"></script>
<script src="~/lib/datatable/js/vfs_fonts.js"></script>
<script src="~/lib/datatable/js/buttons.html5.min.js"></script>
<script src="~/lib/datatable/js/buttons.print.min.js"></script>
<script src="~/lib/datatable/js/buttons.colvis.min.js"></script>
<script src="~/lib/toastr/toastr.min.js"></script>
<script>
    $(document).ready(function () {
        var CaseId = $('#CaseId').val();
        function returnToMaker(data) {
            const userConfirmed = confirm("Are you sure you want to return to the maker?");
            if (userConfirmed) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("RetrunToMaker", "Case")',
                    data: { Id: data },
                    success: function (response) {
                        // Assuming the response indicates success
                        if (response.success) {
                            toastr.success("Successfully returned to maker!", "success");
                            var caseCollateralsTable = $('#RejectCollaterals').DataTable();
                                caseCollateralsTable.destroy();
                            loadCollaterals();
                        } else {
                            toastr.error("Failed to return to maker.", "error");
                        }
                    },
                    error: function () {
                        toastr.error("An error occurred. Please try again.", "error");
                    }
                });
            }
        }
        function initializeDataTable(data) {
            caseCollateralsTable = $('#RejectCollaterals').DataTable({
                language: {
                    emptyTable: "There is no collateral register for this case please click the above add button to add collaterals"
                },
                responsive: true,
                pageLength: 8,
                lengthChange: false,
                autoWidth: false,
                buttons: [
                    "copy",
                    "csv",
                    "excel",
                    { extend: 'pdf', title: 'My Case - pdf' },
                    { extend: 'print', title: 'My Case - Print' },
                    "colvis"
                ],
                data: data,
                columns: [
                    { data: 'PropertyOwner', width: '20%' },
                    { data: 'Role', width: '20%' },
                    { data: 'Category', width: '25%' },
                    { data: 'Type', width: '25%' },
                    {
                        data: 'Id',
                        width: '10%',
                        render: function (data, type, row, meta) {
                            return `<a href="@Url.Action("Detail", "Collateral")?Id=${data}">Details |
                                    </a> <a href="@Url.Action("Edit", "Collateral")?Id=${data}">Edit</a>|
                                    <a href="#" class="return-to-maker" data-id="${data}">Return to Maker</a>`;
                        }
                    }
                ]
            }).buttons().container().appendTo('#RejectCollaterals_wrapper .col-md-6:eq(0)');
        }
        $(document).on('click', '.return-to-maker', function (event) {
            event.preventDefault(); // Prevent the default anchor click behavior
            const id = $(this).data('id');
            returnToMaker(id);
        });
       
        function loadCollaterals() {
            $.ajax({
                url: '/Collateral/GetRejectCollaterals?CaseId=' + CaseId,
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    if ($.fn.DataTable.isDataTable('#RejectCollaterals')) {
                        var caseCollateralsTable = $('#RejectCollaterals').DataTable();
                        caseCollateralsTable.destroy();
                    }
                    initializeDataTable(data);
                },
                error: function (error) {
                    toastr.error("Failed to load collaterals");
                    console.log(error);
                }
            });
        }
           loadCollaterals();
         function LoadCorrectionHistory() {
        $.ajax({
            url: '/CaseComment/GetCaseCorrectionHistory?caseId=' + CaseId,
            method: 'GET',
            success: function (data) {
                var currentUserID = data.userId;
                var caseCorrections = data.caseComments; // Assuming this is an array of comments
                var countComments = caseCorrections.length;
                $(".CorrectionBage").text(countComments);

                // Clear previous messages
                $('.correctionHistories').empty();

                if (caseCorrections && caseCorrections.length > 0) {
                    caseCorrections.forEach(function (comments) {
                        // Create a card for each comment
                        var card = $('<div>').addClass('card mb-3 direct-chat-card'); // Card for each comment
                        var cardBody = $('<div>').addClass('card-body');

                        // Create elements for user information and comment details
                        var chatName = $('<a>').attr('href', '/UserManagment/Profile/' + comments.CommentByUserId).addClass('direct-chat-name');
                        chatName.append(GetUserInfo(comments.CommentByUserId).then(username => {
                            $('<span>').text(username).appendTo(chatName);
                        }));

                        var createdAt = new Date(comments.CreatedAt);
                        var formattedDate = formatDate(createdAt);

                        var commentedFieldName = $('<div>').html(`<strong>Commented Field Name:</strong> ${comments.CommentedFieldName}`);
                        var commentText = $('<div>').html(`<strong>Comment:</strong> ${comments.Content}`);
                        var commentType = $('<div>').html(`<strong>Type:</strong> ${comments.MessageType}`);
                        var timestamp = $('<span>').addClass('direct-chat-timestamp float-right').text(formattedDate);

                        // Append elements to the card body
                        cardBody.append(chatName, timestamp, commentedFieldName, commentText, commentType);
                        card.append(cardBody);
                        $('.correctionHistories').append(card); // Add the card to the list
                    });
                } else {
                    var noCommentsMsg = $('<div>').addClass('no-comments-msg').text('There are no comments related to this case.');
                    $('.correctionHistories').append(noCommentsMsg);
                }
            },
            error: function () {
                console.log('An error occurred while retrieving case comments.');
            }
        });
    }
         function GetUserInfo(Id, callback){
        return new Promise(function(resolve , reject){

              $.ajax({
            url: '/UserManagment/GetuserInfos?id=' + Id,
            method: 'GET',
            success: function (data) {
                var currentUserID = data
                // var caseCorrections = data.caseComments; // Assuming this is an array of comments
                // var countComment = data.caseComments.length;
                ResponseData= currentUserID.Name;
                                console.log('An error occurred while retrieving case comments.'+ResponseData);
              resolve(currentUserID.Name);
            },
            error: function () {
                console.log('An error occurred while retrieving case comments.');
                reject(null);
            }
        });

        })


    }
    // Call the function to load correction history
         LoadCorrectionHistory();
         function formatDate(date) {
            var options = { year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric', hour12: true };
            return date.toLocaleString('en-US', options);
        }
     });
</script>
