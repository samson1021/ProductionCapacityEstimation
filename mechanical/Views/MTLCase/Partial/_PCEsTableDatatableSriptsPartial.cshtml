﻿@using mechanical.Models.PCE.Entities

@{
    var Status = ViewBag.Status as string;
    var CurrentUser = ViewData["CurrentUser"] as CreateUser;
    var EmptyMessage = "There are no Productions found";
    var FetchUrl = "/MOPCECase/GetPCEs?Status=" + Status;
    var PCECaseId = ViewData["PCECaseId"] as Guid?; 

    if (!string.IsNullOrEmpty(Status) && !Status.Equals("All", StringComparison.OrdinalIgnoreCase))
    {
        EmptyMessage = "There are no " + Status + " Productions found";
    }
    if (PCECaseId.HasValue)
    {
        FetchUrl = FetchUrl + "&PCECaseId=" + PCECaseId;
        EmptyMessage = EmptyMessage + " for this  PCE Case";
    }
}

<script>
    $(document).ready(function () {
        
        var fetchUrl = '@Html.Raw(System.Web.HttpUtility.JavaScriptStringEncode(FetchUrl))';
        function initializeDataTable(data) {

            $('#Productions').DataTable({
                language: {
                    emptyTable: '@EmptyMessage'
                },
                responsive: true,
                pageLength: 8,
                lengthChange: false,
                autoWidth: false,
                buttons: ["copy", "csv", "excel", { extend: 'pdf', title: 'My PCE Case - pdf' }, { extend: 'print', title: 'My PCE Case - Print' }, "colvis"],
                data: data,
                columns: [
                    {
                        data: null,
                        render: function (data, type, row, meta) {
                            return '<input class="purple-checkbox" type="checkbox" value="' + data.Id + '">';
                        }
                    },
                    { data: 'PropertyOwner', width: '25%' },
                    { data: 'Role', width: '25%' },
                    { data: 'ProductionType', width: '35%' },
                    {
                        data: 'Id',
                        width: '10%',
                        render: function (data, type, row, meta) {
                                                       
                            const baseUrl = '@Url.Action("Create", "PCEEvaluation")?PCEId=';
                            const detailsUrl = '@Url.Action("Detail", "ProductionCapacity")?Id=';
                            const evaluateText = row.CurrentStatus === "Reestimate" ? "Reestimate" : "Evaluate";

                            const evaluateLink = (row.CurrentStatus === "New" || row.CurrentStatus === "Reestimate")
                                ? `<a href="${baseUrl}${data}">${evaluateText}</a> | `
                                : '';

                            const returnLink = (row.CurrentStatus === "New" || row.CurrentStatus === "Reestimate" || row.CurrentStatus === "Pending")
                                ? ` | <a href="#" onclick="openRejectionModal('${data}')">Return</a>`
                                : '';

                            let link = `<a href="${detailsUrl}${data}">Details</a>${returnLink}`;

                            if ('@CurrentUser.Role.Name' === "Maker Officer") {
                                link = evaluateLink + link;
                            }

                            return link;
                            
                        }
                    }
                ]
            }).buttons().container().appendTo('#Productions_wrapper .col-md-6:eq(0)');
        }
        function loadProductions() {
            $.ajax({
                url: fetchUrl,
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    if ($.fn.DataTable.isDataTable('#Productions')) {
                        $('#Productions').DataTable().destroy();
                    }
                    initializeDataTable(data);
                },
                error: function (error) {
                    toastr.error("Failed to load Production Capacities");
                    console.log(error);
                }
            });
        }
        loadProductions();


        $.ajax({
            url: '/UserManagment/GetMakerOfficer',
            method: 'GET',
            dataType: 'json'
        })
            .done(function (data) {
                var selectOption = $('<option selected disabled></option>').attr('value', '').text('Select Maker Officer');
                $('#employeeDropdown').append(selectOption);
                data.forEach(function (employee) {
                    var option = $('<option></option>').attr('value', employee.Id).text(employee.Name);
                    $('#employeeDropdown').append(option);
                });
            })
            .fail(function (jqXHR, textStatus, errorThrown) {
                console.log('Error fetching employee data:', errorThrown);
            });

        $('#assignButton').on('click', function () {
            var checkedProductions = $('.purple-checkbox:checked');
            var SelectedPCEIds = [];

            checkedProductions.each(function () {
                var ProductionId = $(this).val();
                SelectedPCEIds.push(ProductionId);
            });
            if (SelectedPCEIds.length === 0) {
                toastr.error('Please select at least one Production');
            } else {
                $('#SelectedPCEIds').val(SelectedPCEIds.join(','));

                $('#assignModal').modal('show');
            }
        });

        $('#selectAllCheckbox').on('click', function () {
            var isChecked = $(this).prop('checked');
            $('.purple-checkbox').prop('checked', isChecked);
        });

        $('#caseProductions tbody').on('change', '.purple-checkbox', function () {
            var allChecked = $('.purple-checkbox').length === $('.purple-checkbox:checked').length;
            $('#selectAllCheckbox').prop('checked', allChecked);
        });

        $('#assignForm').submit(function (e) {
            e.preventDefault();

            var formData = new FormData(this);

            $.ajax({
                url: '/MTLCase/PCEAssignMakerOfficer',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    toastr.success(response.message);
                    location.reload();
                    $('#assignModal').modal('hide');
                },
                error: function (error) {
                    toastr.error("Unable to assign Production");
                    console.log(error);
                }
            });
        });
    });


    function openRejectionModal(PCEId) {
        document.querySelector('#rejectionModal1 input[name="PCEId"]').value = PCEId;
        $('#rejectionModal1').modal('show');
    }
</script>