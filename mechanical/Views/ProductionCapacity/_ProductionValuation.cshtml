﻿@using mechanical.Models.Dto.UserDto
@using mechanical.Models.PCE.Entities
@using mechanical.Models.Dto.UploadFileDto
@using mechanical.Models.PCE.Dto.PCEEvaluationDto
@using mechanical.Models.PCE.Dto.PCECaseScheduleDto
@using mechanical.Models.PCE.Dto.ProductionCapacityDto

@model ProductionReturnDto

@{
    ViewData["Title"] = ViewBag.Title as string; 
    var currentUser = ViewData["CurrentUser"] as ReturnUserDto;
    var reestimation = ViewData["Reestimation"] as ProductionReestimation;
    var latestEvaluation = ViewData["LatestEvaluation"] as PCEEvaluationReturnDto;
    var latestPCECaseSchedule = ViewData["LatestPCECaseSchedule"] as PCECaseScheduleReturnDto;
    var PCECase = ViewData["PCECase"] as ProductionDetailDto;

    var currentUserRole = currentUser?.Role?.Name as string;
}

@if (Model.CurrentStatus == "Reestimate" && reestimation != null)
{
    <div class="card">
        <div class="card-header">
            <h3 class="card-title text-warning">Reason for reestimation</h3>
        </div>
        <div class="card-body">
            <div>
                @reestimation.Reason
            </div>
        </div>
    </div>
}

<div class="card card-purple card-outline card-outline-tabs">
    @* <div class="card-header bg-purple text-white">
        <h3 class="card-title text-white text-center mb-0"><i class="fas fa-industry me-2"></i>Valuation Result</h3>
    </div> *@
    <div class="card-body">
        @{
            if (latestEvaluation != null)
            {
                <div class="row">
                    @await Html.PartialAsync("~/Views/PCEEvaluation/Partial/_EvaluationDetailPartial.cshtml", latestEvaluation)
                </div>
                @if (currentUserRole == "Maker Officer" && Model.CurrentStage == "Maker Officer" && Model.AssignedEvaluatorId == currentUser.Id)
                {
                    if (Model.CurrentStatus == "New" || Model.CurrentStatus == "Pending" || Model.CurrentStatus == "Reestimate")
                    {
                        <div class="form-group row">
                            <div id="update-btn-container" class="col-xl-2 offset-xl-1" >
                                <a href="@Url.Action("Update", "PCEEvaluation", new { Id = @latestEvaluation.Id })" id="update-btn" class="btn btn-block btn-info">
                                    <i class="fas fa-pen mr-2"></i> Update
                                </a>
                            </div>
                            <div id="delete-btn-container" class="col-xl-2 offset-xl-2">
                                <a href="@Url.Action("Delete", "PCEEvaluation", new { Id = @latestEvaluation.Id })" id="delete-btn" class="btn btn-block btn-dark">
                                    <i class="fas fa-trash-alt mr-2"></i> Delete
                                </a>
                            </div>
                            @* <div id="return-btn-container" class="col-xl-2 offset-xl-1">
                                <button id="return-btn" type="button" class="btn btn-block btn-danger" data-toggle="modal" data-target="#returnModal1">
                                    <i class="fas fa-undo mr-2"></i> Return
                                </button>
                            </div> *@
                            <div id="evaluate-btn-container" class="col-xl-2 offset-xl-2">
                                <a href="@Url.Action("Evaluate", "PCEEvaluation", new { Id = @latestEvaluation.Id })" id="evaluate-btn" class="btn btn-block btn-success">
                                    <i class="fas fa-paper-plane mr-2"></i> Send To RM
                                </a>
                            </div>
                        </div>
                    }
                }
            }
            else
            {
                <div>
                    <h6 class="text-center">
                        Not evaluated yet!
    
                        @if (latestPCECaseSchedule == null)
                        {
                            <i class="text-warning"> The Scheduled time is not set as of now.</i>
                        }
                        else if (latestPCECaseSchedule.Status != "Approved")
                        {
                            <i class="text-warning"> The Scheduled time is not approved/confirmed.</i>
                        }
                        else if (latestPCECaseSchedule.ScheduleDate > DateTime.Today)
                        {
                            <i class="text-warning"> The Scheduled time is not due.</i>
                        }
                        else
                        {
                            @if (currentUserRole == "Maker Officer" && Model.CurrentStage == "Maker Officer" && Model.AssignedEvaluatorId == currentUser.Id)
                            {
                                @if (Model.CurrentStatus == "New" || Model.CurrentStatus == "Reestimate")
                                {
                                    var linkName = Model.CurrentStatus == "Reestimate" ? "Reestimate" : "Evaluate";
                                    <a href="@Url.Action("Create", "PCEEvaluation", new { PCEId = Model.Id })"> @linkName </a>
                                    <a href="#" data-toggle="modal" data-target="#returnModal1">| Return</a>
                                }
                            }
                        }
                    </h6>
                </div>
            }
        }
    </div>
</div>