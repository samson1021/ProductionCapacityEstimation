@model mechanical.Models.ViewModels.NotificationViewModel

<div class="container my-4">
    <h2 class="mb-4">Notifications</h2>
    @if (!Model.Notifications.Any())
    {
        <div class="alert alert-info">No notifications found.</div>
    }
    else
    {
        <div class="list-group">
            @foreach (var notification in Model.Notifications)
            {
                var cardClass = notification.IsRead ? "card mb-2" : "card mb-2 border-warning";
                var titleClass = notification.IsRead ? "card-title" : "card-title fw-bold";
                <a href="@notification.Link" class="list-group-item list-group-item-action" data-id="@notification.Id" onclick="markNotificationAsRead('@notification.Id', this)">
                    <div class="@cardClass">
                        <div class="card-body">
                            <h5 class="@titleClass">@notification.Message</h5>
                            <p class="card-text text-end mt-1">
                                <small class="text-muted">@notification.CreatedAt.ToString("g")</small>
                            </p>
                        </div>
                    </div>
                </a>
            }
        </div>

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <div class="d-flex justify-content-end mt-4">
                <nav aria-label="Page navigation">
                    <ul class="pagination">
                        @if (Model.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?page=@(Model.CurrentPage - 1)">Previous</a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link">Previous</span>
                            </li>
                        }
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            if (i == Model.CurrentPage)
                            {
                                <li class="page-item active">
                                    <span class="page-link">@i</span>
                                </li>
                            }
                            else
                            {
                                <li class="page-item">
                                    <a class="page-link" href="?page=@i">@i</a>
                                </li>
                            }
                        }
                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="?page=@(Model.CurrentPage + 1)">Next</a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link">Next</span>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        }
    }
</div>

@section Scripts {
    <script>
        function markNotificationAsRead(id, element) {
            $.ajax({
                url: "/Notification/MarkAsRead?id=" + id,
                method: "POST",
                contentType: "application/json"
            }).done(function () {
                $(element).removeClass("border-warning");
                $(element).find("h5").removeClass("fw-bold");
            }).fail(function (err) {
                console.error("Error marking notification as read", err);
            });
        }
    </script>
}
