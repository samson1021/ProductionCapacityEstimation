<!-- Updated Modal in _Layout.cshtml -->
<div class="modal fade" id="universalNotificationModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content border-0 shadow-lg rounded-4" style="background: #f8f6fc;">
            <div class="modal-header border-0 rounded-top-4 d-flex flex-column align-items-start gap-1" style="background: linear-gradient(90deg, #7c3aed 0%, #a78bfa 100%); color: #fff;">
                <div class="w-100 d-flex justify-content-between align-items-center">
                    <h5 class="modal-title fw-semibold mb-0">
                        <i class="fas fa-bell me-2"></i>Notification Details
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
            </div>
            <div class="modal-body px-4 py-4" id="notificationModalContent">
                <div class="loading-spinner text-center py-5">
                    <div class="spinner-border text-primary" role="status"></div>
                </div>
            </div>
            <div class="modal-footer border-0 rounded-bottom-4 d-flex justify-content-between" style="background: #ede9fe;">
                <button type="button" class="btn btn-outline-secondary rounded-pill px-4" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Close
                </button>
                <a href="#" id="notificationFullDetailsLink" class="btn rounded-pill px-4" style="background: #7c3aed; color: #fff;">
                    <i class="fas fa-external-link-alt me-2"></i>View Related Content
                </a>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Handle notification links
        document.querySelectorAll('[data-id]').forEach(link => {
            link.addEventListener('click', async function(e) {
                e.preventDefault();
                await handleNotificationInteraction(this.dataset.notificationId);
            });
        });

        // Handle URL parameter
        const urlParams = new URLSearchParams(window.location.search);
        const notificationId = urlParams.get('notificationId');
        if (notificationId) {
            handleNotificationInteraction(notificationId);
            history.replaceState({}, '', window.location.pathname);
        }
    });

    async function handleNotificationInteraction(notificationId) {
        const modal = new bootstrap.Modal('#universalNotificationModal');
        const content = document.getElementById('notificationModalContent');
        const fullLink = document.getElementById('notificationFullDetailsLink');

        // Reset modal header fields
        try {
            content.innerHTML = `<div class="loading-spinner text-center py-5">
                                    <div class="spinner-border text-primary" role="status"></div>
                                </div>`;

            // Fetch notification data
            // const response = await fetch(`/api/Notification/${notificationId}`);
            const response = await fetch(`/Notification/GetNotification/${notificationId}`);
            if (!response.ok) throw new Error('Failed to fetch notification');
            
            const data = await response.json();
            console.log("response", data);

            // Update modal header
            var dateSpan = new Date(data.CreatedAt).toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'long',
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
            var statusSpan = `<span class="badge ${data.IsRead ? 'bg-success' : 'bg-warning'}">
                                        ${data.IsRead ? 'Read' : 'Unread'}
                                    </span>`;

            // Update modal content
            content.innerHTML = `
                <div class="notification-header mb-4 d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center gap-2">
                        <h5 class="fw-semibold mb-0">${data.Type}</h5>
                        <span id="notificationStatus" class="ms-2">${statusSpan}</span>
                    </div>
                    <span id="notificationDate" class="small text-dark text-end">${dateSpan}</span>
                </div>
                <div class="notification-body">
                    <p class="lead mb-0">${data.Content}</p>
                </div>
            `;

            // Update full details link
            fullLink.href = data.Link || '#';
            fullLink.style.display = data.Link ? 'inline-block' : 'none';

            // Mark as read
            if (!data.IsRead) {
                try {
                    // await fetch(`/api/Notification/${notificationId}/mark-read`, {
                    //     method: 'PUT'
                    // });
                    await fetch(`/Notification/MarkAsRead/${notificationId}`, {
                        method: 'POST'
                    });
                    document.getElementById('notificationStatus').innerHTML = '<span class="badge bg-success">Read</span>';
                } catch (error) {
                    console.error('Error marking notification as read:', error);
                }
            }

            modal.show();
        } catch (error) {
            content.innerHTML = `<div class="alert alert-danger">Error loading notification: ${error.message}</div>`;
            fullLink.style.display = 'none';
            modal.show();
        }
    }
</script>