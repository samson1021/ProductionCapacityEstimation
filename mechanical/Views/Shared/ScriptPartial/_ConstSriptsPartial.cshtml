<script src="~/lib/datatable/js/jquery.datatables.min.js"></script>
<script src="~/lib/datatable/js/datatables.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/datatables.responsive.min.js"></script>
<script src="~/lib/datatable/js/responsive.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/datatables.buttons.min.js"></script>
<script src="~/lib/datatable/js/buttons.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/jszip.min.js"></script>
<script src="~/lib/datatable/js/pdfmake.min.js"></script>
<script src="~/lib/datatable/js/vfs_fonts.js"></script>
<script src="~/lib/datatable/js/buttons.html5.min.js"></script>
<script src="~/lib/datatable/js/buttons.print.min.js"></script>
<script src="~/lib/datatable/js/buttons.colvis.min.js"></script>
<script src="~/lib/toastr/toastr.min.js"></script>
<script>
    $(document).ready(function () {
        $('#showCollateralFile').click(function () {
            $('#CollateralFileModal').modal('show');
        });
    });
    //this method is to give comment for maker and change the status of collateral 
    $(document).ready(function () {
        $('.show-comment-box').click(function () {
            var modal = $(this).data('target');
            var fieldId = $(this).data('field-id');
            var comment = $(this).data('comment');
            $('#comment').val(comment ? comment : '');
            $(modal).modal('show');
            $(modal).find('.save-comment').attr('data-field-id', fieldId); // Store the field ID in the modal's save button
        });

        $('.save-comment').click(function () {
            var fieldId = $(this).data('field-id');
            var comment = $('#comment').val();
            var collateralId = $('#TxtmovId').val();
            var EquipmentId = $('#TxtEquipmentId').val();


            var formdata = new FormData();
            formdata.append('CollateralID', collateralId);
            formdata.append('EquipmentId', EquipmentId);
            formdata.append('Comment', comment);
            formdata.append('CommentedAttribute', fieldId);

            var correctionDto = JSON.stringify(formdata);
            console.log('jsonData ID:', correctionDto);

            $.ajax({
                url: '/Correction/Create',
                type: 'Post',
                data: formdata,
                processData: false,
                contentType: false,
                success: function (data) {      
                    toastr.success('Successfuly Submited Your Comment', 'Success');
                    setTimeout(function () {
                        location.reload();
                    }, 20);
                },
                error: function (error) {
                    toastr.error("Failed to Post Correction");
                    console.log(error);
                }
            });


        });
        $(document).ready(function () {

            const CaseId = $('#TxtmovId').val();
        console.log("Case ID:", CaseId);

        // Event Handlers
        $('#CorectionHistoryButton').click(LoadCorrectionHistory);
        $('#showCollateralFile').click(() => $('#CollateralFileModal').modal('show'));
            function LoadCorrectionHistory() {
            console.log("Loading correction history...");

            if (!CaseId) {
                console.error("Case ID is missing!");
                return;
            }

            $.ajax({
                url: '/Collateral/GetCollateralCorrectionHistory',
                method: 'GET',
                data: { CollateralId: CaseId },
                success: function(data) {
                    renderCorrectionHistory(data);
                },
                error: function() {
                    console.error('Failed to load correction history');
                    toastr.error('Failed to load history');
                }
            });
        }

        function renderCorrectionHistory(data) {
            const $container = $('#CorrectionHistoryModal.correctionHistories').empty();
            const countComments = data.caseComments?.length || 0;

            $(".CorrectionBage").text(countComments);

            if (countComments > 0) {
                 data.caseComments.forEach(function (comments) {
                            // Create a card for each comment
                            var card = $('<div>').addClass('card mb-3 direct-chat-card');
                            var cardBody = $('<div>').addClass('card-body');

                            // User information and comment details
                            var chatName = $('<a>').attr('href', '/UserManagment/Profile/' + comments.CommentByUserId).addClass('direct-chat-name');
                            GetUserInfo(comments.CommentByUserId).then(username => {
                                $('<span>').text(username).appendTo(chatName);
                            });

                            var createdAt = new Date(comments.CreatedAt);
                            var formattedDate = formatDate(createdAt);

                            var commentedFieldName = $('<div>').html(`<strong>Commented Field Name:</strong> ${comments.CommentedFieldName}`);
                            var commentText = $('<div>').html(`<strong>Comment:</strong> ${comments.Content}`);
                            var commentType = $('<div>').html(`<strong>Type:</strong> ${comments.MessageType}`);
                            var timestamp = $('<span>').addClass('direct-chat-timestamp float-right').text(formattedDate);

                            // Append elements to the card body
                            cardBody.append(chatName, timestamp, commentedFieldName, commentText, commentType);
                            card.append(cardBody);
                            $('#CorrectionHistoryModal .correctionHistories').append(card);
                        });
            } else {
                $container.append('<div class="no-comments-msg">There are no comments</div>');
            }
        }
                LoadCorrectionHistory();
                function GetUserInfo(userId) {
            return new Promise((resolve, reject) => {
                $.ajax({
                    url: '/UserManagment/GetuserInfos',
                    method: 'GET',
                    data: { id: userId },
                    success: function(data) {
                        resolve(data?.Name || 'Unknown User');
                    },
                    error: function() {
                        console.error('Failed to fetch user info');
                        resolve('Unknown User');
                    }
                });
            });
        }




            $("#checkedButton").click(function () {
                if (confirm("Are you sure you want to send this evaluation to the Relational Manager?")) {
                    sendRequest("Complete");
                }
            });

            $("#saveButton").click(function () {
                sendRequest("saved");
            });

            $("#correctionButton").click(function () {
                sendRequest("correction");
            });
            var collateralId = $('#TxtmovId').val();
            function sendRequest(action) {
                $.ajax({
                    url: "/Collateral/changeCollateralStatus",
                    method: "POST",
                    data: { status: action, Id: collateralId },
                    success: function (response) {
                        toastr.success('Successfully Return Your collateral to Maker', 'Success');
                        setTimeout(function () {
                            location.reload();
                            window.location.href = '/CO/Mycases';

                        }, 20);
                    },
                    error: function (xhr, status, error) {
                        console.log("Request failed: " + error);
                        setTimeout(function () {
                            location.reload();
                        }, 20);
                    }
                });
            }
        });
    });
    //this is the script to show the comment of the filed given by Checker
    document.querySelector("#btnComment").addEventListener("click", event => {
        var comment = event.target.dataset.comment;
        //var modal = $('#CommentBoxModal');
        $('#CommentModal').text(comment);
        //modal.find('#comment').val(comment);
        console.log('jsonData ID:', event.target.dataset.comment);

    })

    $(document).ready(function () {
        $("#btnSaveForResubmiting").click(function (){
            saveReValuation("Save");
        })
        var collateralId = $('#TxtmovId').val();
        console.log(collateralId);
        function saveReValuation(action) {
            $.ajax({
                Url: "/MOCase/Mycases"
            })
        }
    })
    function formatDate(date) {
            const options = {
                year: 'numeric',
                month: 'short',
                day: 'numeric',
                hour: 'numeric',
                minute: 'numeric',
                hour12: true
            };
            return date.toLocaleString('en-US', options);
        }
</script>
