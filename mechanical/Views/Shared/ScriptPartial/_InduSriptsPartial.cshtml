<script src="~/lib/datatable/js/jquery.datatables.min.js"></script>
<script src="~/lib/datatable/js/jquery.datatables.min.js"></script>
<script src="~/lib/datatable/js/datatables.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/datatables.responsive.min.js"></script>
<script src="~/lib/datatable/js/responsive.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/datatables.buttons.min.js"></script>
<script src="~/lib/datatable/js/buttons.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/jszip.min.js"></script>
<script src="~/lib/datatable/js/pdfmake.min.js"></script>
<script src="~/lib/datatable/js/vfs_fonts.js"></script>
<script src="~/lib/datatable/js/buttons.html5.min.js"></script>
<script src="~/lib/datatable/js/buttons.print.min.js"></script>
<script src="~/lib/datatable/js/buttons.colvis.min.js"></script>
<script src="~/lib/toastr/toastr.min.js"></script>

<script>
  
    $(document).ready(function () {
        console.log("Document ready initialized");

        // Initialize variables
        const CaseId = $('#TxtmovId').val();
        console.log("Case ID:", CaseId);

        // Event Handlers
        $('#CorectionHistoryButton').click(LoadCorrectionHistory);
        $('#showCollateralFile').click(() => $('#CollateralFileModal').modal('show'));

        document.getElementById("CheckAssesmentButton").addEventListener("click", function() {
            $('#CheckAssesmentModal').modal('show');
        });

        // Modal Form Submission
        $('#checkAssessmentForm').on('submit', function(e) {
            e.preventDefault();
            submitFormData(this);
        });

        // Comment Box Handlers (merged duplicates)
        $('.show-comment-box').click(function() {
            const modal = $(this).data('target');
            const fieldId = $(this).data('field-id');
            const comment = $(this).data('comment') || '';

            $('#comment').val(comment);
            $("#CommentBoxModal")
                .modal('show')
                .data('field-id', fieldId);

            $(modal).find('.save-comment, .Replay-comment').attr('data-field-id', fieldId);
        });

        $('.save-comment').click(submitComment);
        $('.Replay-comment').click(submitReply);

        // Status Change Buttons
        $(".checkedButton").click(() => confirmAction("Complete"));
        $(".saveButton").click(() => sendRequest("saved"));
        $(".correctionButton").click(() => confirmAction("correction"));
        $("#btnSaveForResubmiting").click(() => saveReValuation("Save"));

        // Comment Display
        document.querySelector("#btnComment").addEventListener("click", event => {
            $('#CommentModal').text(event.target.dataset.comment || 'No comment available');
        });

        // Core Functions
        function LoadCorrectionHistory() {
            console.log("Loading correction history...");

            if (!CaseId) {
                console.error("Case ID is missing!");
                return;
            }

            $.ajax({
                url: '/Collateral/GetCollateralCorrectionHistory',
                method: 'GET',
                data: { CollateralId: CaseId },
                success: function(data) {
                    renderCorrectionHistory(data);
                },
                error: function() {
                    console.error('Failed to load correction history');
                    toastr.error('Failed to load history');
                }
            });
        }

        function renderCorrectionHistory(data) {
            const $container = $('#CorrectionHistoryModal.correctionHistories').empty();
            const countComments = data.caseComments?.length || 0;
           
            $(".CorrectionBage").text(countComments);

            if (countComments > 0) {
                 data.caseComments.forEach(function (comments) {
                            // Create a card for each comment
                            var card = $('<div>').addClass('card mb-3 direct-chat-card');
                            var cardBody = $('<div>').addClass('card-body');

                            // User information and comment details
                            var chatName = $('<a>').attr('href', '/UserManagment/Profile/' + comments.CommentByUserId).addClass('direct-chat-name');
                            GetUserInfo(comments.CommentByUserId).then(username => {
                                $('<span>').text(username).appendTo(chatName);
                            });

                            var createdAt = new Date(comments.CreatedAt);
                            var formattedDate = formatDate(createdAt);

                            var commentedFieldName = $('<div>').html(`<strong>Commented Field Name:</strong> ${comments.CommentedFieldName}`);
                            var commentText = $('<div>').html(`<strong>Comment:</strong> ${comments.Content}`);
                            var commentType = $('<div>').html(`<strong>Type:</strong> ${comments.MessageType}`);
                            var timestamp = $('<span>').addClass('direct-chat-timestamp float-right').text(formattedDate);

                            // Append elements to the card body
                            cardBody.append(chatName, timestamp, commentedFieldName, commentText, commentType);
                            card.append(cardBody);
                            $('#CorrectionHistoryModal .correctionHistories').append(card);
                        });
            } else {
                $container.append('<div class="no-comments-msg">There are no comments</div>');
            }
        }
                LoadCorrectionHistory();
        

        function GetUserInfo(userId) {
            return new Promise((resolve, reject) => {
                $.ajax({
                    url: '/UserManagment/GetuserInfos',
                    method: 'GET',
                    data: { id: userId },
                    success: function(data) {
                        resolve(data?.Name || 'Unknown User');
                    },
                    error: function() {
                        console.error('Failed to fetch user info');
                        resolve('Unknown User');
                    }
                });
            });
        }

        function submitFormData(form) {
            const formData = new FormData(form);

            $.ajax({
                url: form.action,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    if (response.redirectUrl) {
                        $('#CheckAssesmentModal').modal('hide');
                        window.open(response.redirectUrl, '_blank');
                    } else {
                        toastr.warning('Unexpected response format');
                    }
                },
                error: function(xhr) {
                    toastr.error('Error: ' + xhr.statusText);
                }
            });
        }

        function submitComment() {
            submitCorrectionData($(this).data('field-id'), '/Correction/Create');
        }

        function submitReply() {
            submitCorrectionData($('#CommentBoxModal').data('field-id'), '/Correction/ReplayForCheckerCorrections');
        }

        function submitCorrectionData(fieldId, endpoint) {
            if (!fieldId) {
                toastr.error('Missing field ID');
                return;
            }

            const formData = new FormData();
            formData.append('CollateralID', CaseId);
            formData.append('EquipmentId', $('#TxtEquipmentId').val());
            formData.append('Comment', $('#comment').val());
            formData.append('CommentedAttribute', fieldId);
            formData.append('Controller', "IndBldgFacilityEquipment");
            formData.append('Action', "GetEvaluatedIndBldgFacilityEquipment");

            $.ajax({
                url: endpoint,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function() {
                    toastr.success('Operation successful');
                    setTimeout(location.reload, 2000);
                },
                error: function() {
                    toastr.error('Operation failed');
                    setTimeout(location.reload, 2000);
                }
            });
        }

        function confirmAction(action) {
            if (confirm(`Are you sure you want to ${action} this evaluation?`)) {
                sendRequest(action);
            }
        }

        function sendRequest(action) {
            $.ajax({
                url: "/Collateral/changeCollateralStatus",
                method: "POST",
                data: { status: action, Id: CaseId },
                success: function(response) {
                    if (response.success) {
                        toastr.success(`Status changed to ${action}`);
                        setTimeout(() => {
                            window.location.href = '/CO/Mycases';
                        }, 2000);
                    } else {
                        toastr.error(response.message || 'Action failed');
                    }
                },
                error: function(xhr) {
                    toastr.error('Error: ' + xhr.statusText);
                }
            });
        }

        function saveReValuation(action) {
            console.log("Saving revaluation...");
            // Implement actual save logic here
        }

        function formatDate(date) {
            const options = {
                year: 'numeric',
                month: 'short',
                day: 'numeric',
                hour: 'numeric',
                minute: 'numeric',
                hour12: true
            };
            return date.toLocaleString('en-US', options);
        }
    });
</script>
