﻿@using mechanical.Models.PCE.Entities

@{
    var pceCaseId = ViewData["PCECaseId"] as Guid?; 
    var currentUser = ViewData["CurrentUser"] as CreateUser;
    var emptyMessage = "There are no Productions found";
    var contName = "MMCase";
    var status = ViewBag.Status as string;

    if (currentUser.Role.Name == "Maker TeamLeader")
    {
        contName = "MTLCase";
    }
    else if (currentUser.Role.Name == "District Valuation Manager")
    {
        contName = "DVMPCECase";
    }
    else if (currentUser.Role.Name == "Maker Officer")
    {
        contName = "MOPCECase";
    }
    
    @* var fetchUrl = "/ProductionCapacity/GetPCEs?Status=" + status; *@
    var fetchUrl = "/" + contName + "/GetPCEs?Status=" + status;

    if (!string.IsNullOrEmpty(status) && !status.Equals("All", StringComparison.OrdinalIgnoreCase))
    {
        emptyMessage = "There are no " + status + " Productions found";
    }
    if (pceCaseId.HasValue)
    {
        fetchUrl = fetchUrl + "&PCECaseId=" + pceCaseId;
        emptyMessage = emptyMessage + " for this  PCE Case";
    }
}

<script>
    $(document).ready(function () {
        
        function initializeDataTable(data) {

            $('#Productions').DataTable({
                language: {
                    emptyTable: '@emptyMessage'
                },
                responsive: true,
                pageLength: 8,
                lengthChange: false,
                autoWidth: false,
                buttons: ["copy", "csv", "excel", { extend: 'pdf', title: 'My PCE Case - pdf' }, { extend: 'print', title: 'My PCE Case - Print' }, "colvis"],
                data: data,
                columns: [
                    {
                        data: null,
                        render: function (data, type, row, meta) {
                            return '<input class="purple-checkbox" type="checkbox" value="' + data.Id + '">';
                        }
                    },
                    { data: 'PropertyOwner', width: '25%' },
                    { data: 'Role', width: '25%' },
                    { data: 'ProductionType', width: '35%' },
                    {
                        data: 'Id',
                        width: '10%',
                        render: function (data, type, row, meta) {
                                                       
                            const baseUrl = '@Url.Action("Create", "PCEEvaluation")?PCEId=';
                            const detailsUrl = '@Url.Action("Detail", "ProductionCapacity")?Id=';
                            const evaluateText = row.CurrentStatus === "Reestimate" ? "Reestimate" : "Evaluate";

                            const evaluateLink = (row.CurrentStatus === "New" || row.CurrentStatus === "Reestimate")
                                ? `<a href="${baseUrl}${data}">${evaluateText}</a> | `
                                : '';

                            const returnLink = (row.CurrentStatus === "New" || row.CurrentStatus === "Reestimate" || row.CurrentStatus === "Pending")
                                ? ` | <a href="#" onclick="openRejectionModal('${data}')">Return</a>`
                                : '';

                            let link = `<a href="${detailsUrl}${data}">Details</a>`;
                            @* let link = `<a href="${detailsUrl}${data}">Details</a>${returnLink}`; *@

                            @* if ('@currentUser.Role.Name' === "Maker Manager" ||'@currentUser.Role.Name' === "District Valuation Manager" || '@currentUser.Role.Name' === "Maker TeamLeader") {
                                link = link + returnLink;
                            }
                            if ('@currentUser.Role.Name' === "Maker Officer") {
                                link = evaluateLink + link; 
                            } *@
                            if ('@currentUser.Role.Name' === "Maker Officer") {
                                link = evaluateLink + link + returnLink;
                            }

                            return link;
                            
                        }
                    }
                ]
            }).buttons().container().appendTo('#Productions_wrapper .col-md-6:eq(0)');
        }
        function loadProductions() {
            $.ajax({
                url: '@Html.Raw(System.Web.HttpUtility.JavaScriptStringEncode(fetchUrl))',
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    if ($.fn.DataTable.isDataTable('#Productions')) {
                        $('#Productions').DataTable().destroy();
                    }
                    initializeDataTable(data);
                },
                error: function (error) {
                    toastr.error("Failed to load Production Capacities");
                    console.log(error);
                }
            });
        }
        loadProductions();
    });

    function openRejectionModal(PCEId) {
        document.querySelector('#rejectionModal1 input[name="PCEId"]').value = PCEId;
        $('#rejectionModal1').modal('show');
    }
</script>