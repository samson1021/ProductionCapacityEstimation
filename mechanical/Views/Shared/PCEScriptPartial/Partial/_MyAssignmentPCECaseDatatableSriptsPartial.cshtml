@using mechanical.Models.PCE.Entities

@{
    var currentUser = ViewData["CurrentUser"] as CreateUser;
    var contName = "MMCase";
    var subbName = "GetMakerTeamleader";
    var assiName = "PCEReAssignTeamleader";
    var seleName = "Team Leader";

    if (currentUser.Role.Name == "Maker TeamLeader")
    {
        contName = "MTLCase";
        subbName = "GetMakerOfficer";
        assiName = "PCEReAssignMakerOfficer";
        seleName = "Maker Officer";
    }
    else if (currentUser.Role.Name == "District Valuation Manager")
    {
        contName = "DVMPCECase";
        subbName = "GetMakerTeamleader";
        assiName = "PCEReAssignMakerOfficer";
        seleName = "Maker Officer";
    }
    
    var getSubordinateUrl = "/UserManagment/" + subbName;
    var assignUrl = "/" + contName + "/" + assiName;

    await Html.RenderPartialAsync("PCEScriptPartial/Partial/_FetchSubordinatesScriptPartial");                       
}


<script>    
       
    $(document).ready(function () {
        var getSubordinateUrl = '@getSubordinateUrl';
        var assignUrl = '@assignUrl';
        var selectName = '@seleName';
        var isReassign = true;

        initializeForAssignment(getSubordinateUrl, assignUrl, selectName, isReassign);
        loadProductions();
    });
    function initializeDataTable(data) {
        $('#Productions').DataTable({
            language: {
                emptyTable: "There are no assigned Productions for this PCE Case."
            },
            responsive: true,
            pageLength: 8,
            lengthChange: false,
            autoWidth: false,
            buttons: ["copy", "csv", "excel", { extend: 'pdf', title: 'My PCE Case - pdf' }, { extend: 'print', title: 'My PCE Case - Print' }, "colvis"],
            data: data,
            columns: [
                {
                    data: null,
                    render: function (data, type, row, meta) {
                        if (data.Status == "New" || data.Status == "Remark"){
                            return '<input class="purple-checkbox" type="checkbox"  value="' + data.PCECaseAssignmentId + '">';
                        }
                        else{

                            return '<input disabled class="purple-checkbox" type="checkbox"  value="' + data.PCECaseAssignmentId + '">';

                        }
                        
                    }
                },
                { data: 'PropertyOwner', width: '15%' },
                { data: 'Role', width: '10%' },
                { data: 'Category', width: '15%' },
                { data: 'Type', width: '15%' },
                { 
                    data: 'AssignmentDate', 
                    width: '10%',
                    render: function(data) {
                        const date = new Date(data);
                        return date.toISOString().split('T')[0]; 
                    } 
                },
                { data: 'User', width: '10%' },
                { data: 'Status', width: '10%' },
                {
                    data: 'ProductionCapacityId',
                    width: '15%',
                    render: function (data, type, row, meta) {
                        return '<a href="@Url.Action("Detail", "ProductionCapacity")?Id=' + data + '">Details';
                    }
                }
            ]
        }).buttons().container().appendTo('#Productions_wrapper .col-md-6:eq(0)');
    }

    function loadProductions() {
        $.ajax({
            url: '/ProductionCapacity/GetMyAssigmentProduction?CaseId=' + '@ViewData["PCECaseId"]',
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                if ($.fn.DataTable.isDataTable('#Productions')) {
                    $('#Productions').DataTable().destroy();
                }
                initializeDataTable(data);
            },
            error: function (error) {
                toastr.error("Failed to load Productions");
                console.log(error);
            }
        });
    }
</script>