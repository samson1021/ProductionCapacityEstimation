@using mechanical.Models.Dto.CaseTerminateDto;
@model mechanical.Models.Dto.CollateralDto.CollateralPostDto;

@{
    var myCase = ViewData["case"] as CaseReturntDto;
    var caseSchedule = ViewData["CaseSchedule"] as IEnumerable<mechanical.Models.Dto.CaseScheduleDto.CaseScheduleReturnDto>;
    var caseTerminate = ViewData["caseTerminate"] as IEnumerable<CaseTerminateReturnDto>;
    var moFile = ViewData["moFile"] as IEnumerable<ReturnFileDto>;
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h4>Case Detail</h4>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active"><a href="@Url.Action("MyCases", "Case")">My Case</a></li>
                    <li class="breadcrumb-item active">Case Details</li>
                </ol>
            </div>
        </div>
    </div>
</section>
<section class="content">
    <div class="container-fluid">
        <div class="card card-purple card-outline card-outline-tabs">
            <div class="card-header p-0 border-bottom-0">
                <ul class="nav nav-tabs" id="custom-tabs-four-tab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-four-home-tab" data-toggle="pill" href="#custom-tabs-four-home" role="tab" aria-controls="custom-tabs-four-home" aria-selected="true"><i class="nav-icon fas fa-home"></i>  General Inforamtion</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" id="custom-tabs-four-profile-tab" data-toggle="pill" href="#custom-tabs-four-profile" role="tab" aria-controls="custom-tabs-four-profile" aria-selected="false"><i class="nav-icon fas fa-file"></i> Collaterals Informations</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-four-messages-tab" data-toggle="pill" href="#custom-tabs-four-messages" role="tab" aria-controls="custom-tabs-four-messages" aria-selected="false"><i class="nav-icon fas fa-calendar-alt"></i> Schedule</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="custom-tabs-four-settings-tab" data-toggle="pill" href="#custom-tabs-four-settings" role="tab" aria-controls="custom-tabs-four-settings" aria-selected="false">
                            <i class="fas fa-comments"> </i>
                            Comments <span class="badge badge-warning right CommentBage"> </span>
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" style="color:red;" id="custom-tabs-four-Terminate-tab" data-toggle="pill" href="#custom-tabs-four-Terminate" role="tab" aria-controls="custom-tabs-four-Terminate" aria-selected="false">
                            <i class="fas fa-ban"> </i>
                            Terminate @{
                                if (caseTerminate.Count() > 0)
                                {
                                    <span class="right badge badge-danger">New</span>
                                }
                            }
                        </a>
                    </li>
                </ul>
            </div>
            <div class="card-body">
                <div class="tab-content" id="custom-tabs-four-tabContent">
                    <div class="tab-pane fade " id="custom-tabs-four-home" role="tabpanel" aria-labelledby="custom-tabs-four-home-tab">
                        @await Html.PartialAsync("_GeneralInfo")
                    </div>
                    <div class="tab-pane fade show active" id="custom-tabs-four-profile" role="tabpanel" aria-labelledby="custom-tabs-four-profile-tab">
                        @await Html.PartialAsync("_CreateNewCollateral")
                    </div>
                    <div class="tab-pane fade" id="custom-tabs-four-messages" role="tabpanel" aria-labelledby="custom-tabs-four-messages-tab">
                        @await Html.PartialAsync("_CaseSchedule")
                    </div>
                    <div class="tab-pane fade" id="custom-tabs-four-settings" role="tabpanel" aria-labelledby="custom-tabs-four-settings-tab">
                        @await Html.PartialAsync("_CaseComment")
                    </div>
                    @{
                        if (caseTerminate.Count() > 0)
                        {
                            <div class="tab-pane fade" id="custom-tabs-four-Terminate" role="tabpanel" aria-labelledby="custom-tabs-four-Terminate-tab">
                                @await Html.PartialAsync("_CaseTerminate")
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</section>
<div class="modal fade" id="rejectionModal1" tabindex="-1" role="dialog" aria-labelledby="rejectionModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <form method="post" action="/Case/SendRejection" id="rejectionForm">
              <input id="CollateralId" type="hidden" />
                <div class="modal-header">
                    <h4 class="modal-title" id="rejectionModalLabel">Reason for Return </h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label for="RejectionComment">Comment:</label>
                        <textarea class="form-control" id="rejectionComment" rows="3"></textarea>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-sm bg-purple col-xl-3">Save</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<script src="~/lib/toastr/toastr.min.js"></script>
@section Scripts {

    <script>
             $(document).ready(function () {
          // Initialize DataTable (if using the DataTables plugin)
          // $('#industrialCollateralTable').DataTable();

          // Show add form modal
                  var currentCaseId = '@myCase.Id'; // You'll need to set this from your page

        function initializeDataTable(data) {
            $('#industrialCollateralTable').DataTable({
                language: {
                    emptyTable: "There is no industrial cost registered"
                },
                responsive: true,
                pageLength: 5,
                lengthChange: false,
                autoWidth: false,
                buttons: ["copy", "csv", "excel", {
                    extend: 'pdf',
                    title: 'Industrial Collaterals - pdf'
                }, {
                    extend: 'print',
                    title: 'Industrial Collaterals - Print'
                }, "colvis"],
                data: data,
                columns: [
                    {
                        data: null,
                        width: '8%',
                        render: function(data, type, row, meta) {
                            return meta.row + 1;
                        }
                    },
                    {
                        data: 'InsuranceFreightOthersCost',
                        width: '18%',
                        render: $.fn.dataTable.render.number(',', '.', 2, '')
                    },
                    {
                        data: 'DepreciatedInsuranceFreightOthersCost',
                        width: '18%',
                        render: $.fn.dataTable.render.number(',', '.', 2, '')
                    },
                    {
                        data: 'LandTransportLoadingUnloadingInstallationCommissioningCost',
                        width: '18%',
                        render: $.fn.dataTable.render.number(',', '.', 2, '')
                    },
                    {
                        data: 'DepreciatedLandTransportLoadingUnloadingInstallationCommissioningCost',
                        width: '18%',
                        render: $.fn.dataTable.render.number(',', '.', 2, '')
                    },
                    {
                        data: 'TotalReplacementCost',
                        width: '18%',
                        render: $.fn.dataTable.render.number(',', '.', 2, '')
                    },
                    {
                        data: 'TotalNetEstimationValue',
                        width: '18%',
                        render: $.fn.dataTable.render.number(',', '.', 2, '')
                    },
                    {
                        data: 'CollateralCount',
                        width: '10%'
                    },
                     {
                        data: 'CollateralCount',
                        width: '10%'
                    },
                    {
                        data:null,
                        width: '10%',
                        orderable: false,
                        searchable: false,
                        render: function(data, type, row) {
                            return `
                                <button class="btn btn-sm btn-warning edit-btn" title="Edit" data-id="${row.id}">
                                    <i class="fas fa-edit"></i>
                                </button>
                                <button class="btn btn-sm btn-danger delete-btn" title="Delete" data-id="${row.id}">
                                    <i class="fas fa-trash"></i>
                                </button>
                            `;
                        }
                    }
                ],
                initComplete: function() {
                    this.api().columns().header().each(function(header) {
                        if ($(header).text().includes('CIF')) {
                            $(header).attr('title', 'Cost of Insurance, Freight & others');
                        } else if ($(header).text().includes('LT&LUCC')) {
                            $(header).attr('title', 'Land Transport, Loading/Unloading & Commissioning Cost');
                        }
                    });
                }
            }).buttons().container().appendTo('#industrialCollateralTable_wrapper .col-md-6:eq(0)');
        }

         function loadCollaterals(caseId) {
            $.ajax({
                url: `/api/IndustrialCollateralCosts/by-case/${caseId}`,
                method: 'GET',
                dataType: 'json',
                contentType: 'application/json'
            })
            .done(function(data) {
                if ($.fn.DataTable.isDataTable('#industrialCollateralTable')) {
                    $('#industrialCollateralTable').DataTable().destroy();
                }
                initializeDataTable(data);
                // toastr.success("Collaterals loaded successfully");

                $(document).off('click', '.edit-btn, .delete-btn').on('click', '.edit-btn, .delete-btn', function() {
                    const id = $(this).data('id');
                    if ($(this).hasClass('edit-btn')) {
                        handleEdit(id);
                    } else {
                        handleDelete(id);
                    }
                });
            })
            .fail(function(xhr, status, error) {
                console.error('Error loading collaterals:', error);
                const message = xhr.responseJSON || error;
                toastr.error(`Failed to load collaterals: ${message}`);
            });
        }

      
        $("#addCostOfInsuranceFreightButton").click(function(){
              loadCollaterals(currentCaseId);
        })

        $('#addNewCollateralButton').click(function() {
            $('#formModalTitle').text('Add New Industrial Collateral');
            $('#collateralForm')[0].reset();
            $('#collateralFormModal').data('editMode', false);
            $('#collateralFormModal').modal('show');
        });
         $('#collateralForm').on('submit', function(e) {
            e.preventDefault(); 

            var caseId = $('#CaseId').val();
            var insuranceCost = $('#insuranceCost').val();
            var machineCount = $('#machineCount').val();

            var postData = {
                InsuranceFreightOthersCost: parseFloat(insuranceCost),
                CollateralCount: parseInt(machineCount)
            };

            if (!insuranceCost || !machineCount) {
                alert('Please fill all required fields');
                return;
            }

            $.ajax({
                url: `/api/IndustrialCollateralCosts/${caseId}`,
                type: 'POST',
                contentType: 'application/json',
                dataType: 'json',
                data: JSON.stringify(postData),
                success: function(response) {
                    $('#collateralFormModal').modal('hide');
                     toastr.success('Data saved successfully');
                     loadCollaterals(currentCaseId)
                },
                error: function(xhr, status, error) {
                    
                    if (xhr.responseJSON && xhr.responseJSON.message) {
                        toastr.error('Error: ' + xhr.responseJSON.message);
                    } else {
                        toastr.error('Failed to save data. Please try again.');
                    }
                }
            });
        });

        $(document).on('click', '.edit-btn',  function() {
            const id = $(this).data('id');
            try {
                const response =  fetch(`/api/IndustrialCollateralCosts/${id}`);
                if (!response.ok) throw new Error('Failed to load collateral');

                const data =  response.json();

                $('#formModalTitle').text('Edit Industrial Collateral');
                $('#insuranceFreightCost').val(data.insuranceFreightOthersCost);
                $('#collateralCount').val(data.collateralCount);
                // Set other fields as needed

                $('#collateralFormModal').data('editMode', true);
                $('#collateralFormModal').data('editId', id);
                $('#collateralFormModal').modal('show');
            } catch (error) {
                console.error('Error loading collateral:', error);
                toastr.error("Failed to load collateral");
            }
        });

        $(document).on('click', '.delete-btn',  function() {
            const id = $(this).data('id');
            if (!confirm('Are you sure you want to delete this industrial collateral record?')) return;

            try {
                const response =  fetch(`/api/IndustrialCollateralCosts/${id}`, {
                    method: 'DELETE'
                });

                if (!response.ok) throw new Error('Failed to delete collateral');

                loadCollaterals(currentCaseId);
                toastr.success("Collateral deleted successfully");
            } catch (error) {
                console.error('Error deleting collateral:', error);
                toastr.error("Failed to delete collateral");
            }
        });

        $('#saveAllChanges').click(function() {
            toastr.success("All changes are automatically saved");
            $('#industrialCollateralModal').modal('hide');
        });

        // Calculate depreciated values when rates change
        $('#insuranceDepreciationRate, #insuranceFreightCost').on('input', function() {
            const amount = parseFloat($('#insuranceFreightCost').val()) || 0;
            const rate = parseFloat($('#insuranceDepreciationRate').val()) || 0;
            const depAmount = amount * (1 - rate/100);
            $('#depreciatedInsuranceCost').val(depAmount.toFixed(2));
        });

        $('#transportDepreciationRate, #transportCost').on('input', function() {
            const amount = parseFloat($('#transportCost').val()) || 0;
            const rate = parseFloat($('#transportDepreciationRate').val()) || 0;
            const depAmount = amount * (1 - rate/100);
            $('#depreciatedTransportCost').val(depAmount.toFixed(2));
        });

          /// the old one
    
            $('#addMechanicalCollateralFormm').on('submit', function (e) {
                e.preventDefault();
                console.log("from jquery");
                var formData = new FormData(this);
                var uploadButton = $('#assignButton'); 
                uploadButton.prop('disabled', true).text('Uploading...');

                $.ajax({
                    url: '@Url.Action("CreateMoDocument", "Collateral")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.message) {
                            toastr.success(response.message);
                            setTimeout(function () {
                                location.reload();
                            }, 1500);
                        }
                    },
                    error: function (xhr, status, error) {
                        toastr.error('An error occurred while uploading the document.');
                    }
                });
            });
            $('#evaluationForm').submit(function (event) {
                event.preventDefault();

                var submitButton = $(this).find('button[type="submit"]');
                submitButton.prop('disabled', true);
                submitButton.html('<i class="fas fa-spinner fa-spin"></i> Processing...');
                var formData = $(this).serialize();

                $.ajax({
                    url: $(this).attr('action'),
                    type: $(this).attr('method'),
                    data: formData,
                    success: function (response) {
                        if (response.Status === 'accepted') {
                            var scheduledDateDiv = $('<div>').text('Scheduled Date: ' + new Date(response.ScheduleDate).toLocaleString());
                            var statusDiv = $('<div>').text('Status: Accepted');

                            $('#CaseSchedule').append(scheduledDateDiv);
                            $('#CaseSchedule').append(statusDiv);
                        } else if (response.Status === 'proposed') {
                            var postDiv = $('<div>').addClass('post clearfix').css({
                                'border-bottom': '1px solid #adb5bd',
                                'color': '#666',
                                'margin-bottom': '15px',
                                'padding-bottom': '15px'
                            });
                            $("#scheduleId").val(response.Id);
                            var userBlockDiv = $('<div>').addClass('user-block');
                            var userImage = $('<img>').addClass('img-circle img-bordered-sm').attr('src', '/img/avatar5.png').attr('alt', 'User Image');
                            var usernameSpan = $('<span>').addClass('username').append($('<a>').attr('href', '#').text('Maker Officer'));
                            var descriptionSpan = $('<span>').addClass('description').text(new Date(response.CreatedAt).toLocaleString());
                            userBlockDiv.append(userImage, usernameSpan, descriptionSpan);

                            var date = $('<p id="ScheduleDate">').text('Schedule Date: ' + new Date(response.ScheduleDate).toLocaleString());
                            var status = $('<p>').text('Status: proposed');
                            var demoFile2P = $('<Button>').addClass('update-link btn btn-sm btn-outline-primary').attr('Id', 'UpdateSchedule').text('Update');

                            postDiv.append(userBlockDiv, date, status, demoFile2P);
                            $('#CaseSchedule').append(postDiv);
                            $('#UpdateSchedule').on('click', function (event) {
                                event.preventDefault();
                                $('#datetimepicker-modal').modal('show');
                            });
                        }

                        $('#evaluationForm').remove();
                    },
                    error: function () {
                        $('#evaluationForm').append('<p class="text-danger">Error occurred while creating the schedule.</p>');
                    },
                    complete: function () {
                        submitButton.prop('disabled', false);
                        submitButton.val('Submit');
                    }
                });
            });

            $('#AcceptcaseTerminationButton').click(function (event) {
                event.preventDefault();
                var formData = new FormData();
                var Id = $('#CaseTerminationId').val();
                formData.append('Id', Id);

                var submitButton = $('#AcceptcaseTerminationButton');
                submitButton.prop('disabled', true);
                submitButton.html('<i class="fas fa-spinner fa-spin"></i> Processing...');

                $.ajax({
                    url: '/Case/ApproveCaseTermination',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        location.reload();
                    },
                    error: function () {
                        alert('Error occurred while updating the date.');
                    }
                });
            });

            $('#UpdateSchedule').on('click', function (event) {
                event.preventDefault();
                $('#datetimepicker-modal').modal('show');
            });
            $('#datetimepicker-form').submit(function (event) {
                event.preventDefault();
                var formData = new FormData(this);
                var Id = $('#CaseSchedulleId').val();
                formData.append('Id', Id);
                console.log(formData)
                $.ajax({
                    url: '/MOCase/UpdateSchedule',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        location.reload();
                    },
                    error: function () {
                        alert('Error occurred while updating the date.');
                    }
                });
            });
            $('#AcceptButton').click(function (event) {
                event.preventDefault();
                var formData = new FormData();
                var Id = $('#CaseScheduleId').val();
                formData.append('Id', Id);

                $.ajax({
                    url: '/MOCase/ApproveSchedule',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        location.reload();
                    },
                    error: function () {
                        alert('Error occurred while updating the date.');
                    }
                });
            });
            $('#proposeNewScheduleButton').click(function () {
                $('#proposeNewSchedule-modal').modal('show');
            });
            $('#proposeNewSchedule-form').submit(function (event) {
                event.preventDefault();
                var formData = new FormData(this);
                var Id = $('#CaseScheduleId').val();
                formData.append('id', Id);

                $.ajax({
                    url: '/Case/CreateSchedule',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        location.reload();
                        // Handle success response
                    },
                    error: function () {
                        $('#evaluationForm').append('<p class="text-danger">Error occurred while creating the schedule.</p>');
                    }
                });
            });



        });
        function fetchCollateralDetails(collateralId) {
            $('#CollateralFileModal').modal('show');
            $.ajax({
                url: '/UploadFile/GetUploadFileByCollateralId',
                type: 'GET',
                data: { CollateralId: collateralId },
                success: function (response) {
                    populateModalTable(response);
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }

        function populateModalTable(data) {
            var tableBody = '';
            data.forEach(function (collateralFile) {
                tableBody += '<tr>';
                tableBody += '<td>' + collateralFile.Name + '</td>';
                tableBody += '<td>' + collateralFile.Catagory + '</td>';
                tableBody += '<td>' + collateralFile.ContentType + '</td>';
                tableBody += '<td><a href="/UploadFile/ViewFile/' + collateralFile.Id + '" target="_blank">View <i class="fas fas-solid fa-eye"></i></a>&nbsp;|&nbsp;<a href="/UploadFile/DownloadFile/' + collateralFile.Id + '" target="_blank">Download <i class="fas fas-solid fa-download"></i></a></td>';
                tableBody += '</tr>';
            });

            // Append the table body to the modal table
            $('#CollateralFileModal tbody').html(tableBody);
        }
    </script>
    @{
        await Html.RenderPartialAsync("ScriptPartial/MO/_MOMyCaseDatatableSriptsPartial");
    }
}





<div class="modal fade" id="CollateralFileModal" tabindex="-1" role="dialog" aria-labelledby="addCollateralModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="CollateralFileModalLabel">   <img src="~/img/assignment_add_FILL0_wght300_GRAD200_opsz20.svg" class="nav-icon" alt="Custom Icon"> Collateral Related Document List</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>File Name</th>
                        <th>File Category</th>
                        <th>File Type</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody id="modalTableBody">
                </tbody>
            </table>
        </div>
    </div>
</div>