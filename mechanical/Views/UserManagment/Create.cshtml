@model mechanical.Models.Entities.CreateUser
@using mechanical.Models.Enum;
@{
    ViewData["Title"] = "Create";
}

<section class="content">
    <section class="col-xl-12 connectedSortable">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="fas fa-user"></i>
                    Create User Access
                </h3>
            </div>
            <div class="card-body">
                <form method="POST" action="/UserManagment/Create">

                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="row">
                        <div class="form-group col-xl-5">
                            <label asp-for="emp_ID" class="control-label">Employee Id <span class="text-danger">*</span></label>
                            <div class="input-group" style="margin:0;">
                                <input asp-for="emp_ID" id="emp_ID" class="form-control" required />
                                <input type="button" class="form-control btn btn-outline-primary  col-lg-4" id="GetEmployeeInfo" value="Get Info" required>
                            </div>
                            <span asp-validation-for="emp_ID" class="text-danger"></span>
                        </div>
                        <div class="form-group col-xl-7">
                            <label asp-for="Name" class="control-label">Full name <span class="text-danger">*</span></label>
                            <input asp-for="Name" id="Name" class="form-control" readonly required />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group  col-xl-7">
                            <label asp-for="Email" class="control-label">Email <span class="text-danger">*</span></label>
                            <input asp-for="Email" id="Email" class="form-control" readonly required />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                        <div class="form-group  col-xl-5">
                            <label asp-for="title" class="control-label">Title <span class="text-danger">*</span></label>
                            <input asp-for="title" id="title" class="form-control" readonly required />
                            <span asp-validation-for="title" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-xl-6">
                            <label asp-for="Branch" class="control-label">Department <span class="text-danger">*</span></label>
                            <input asp-for="Branch" id="Branch" class="form-control" readonly required />
                            <span asp-validation-for="Branch" class="text-danger"></span>
                        </div>
                        <div class="form-group col-xl-6">
                            <label asp-for="company" class="control-label">Company <span class="text-danger">*</span></label>
                            <input asp-for="company" id="company" class="form-control" readonly required />
                            <span asp-validation-for="company" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-xl-4">
                            <label asp-for="PhoneNO" class="control-label">Phone Number</label>
                            <input asp-for="PhoneNO" class="form-control" />
                            <span asp-validation-for="PhoneNO" class="text-danger"></span>
                        </div>
                        <div class="form-group col-xl-4">
                            <label asp-for="DistrictId" class="control-label">Center <span class="text-danger">*</span></label>
                            <select id="DistrictId" name="DistrictId" class="form-control" required></select>
                            <span asp-validation-for="DistrictId" class="text-danger"></span>
                        </div>
                        <div class="form-group col-xl-4">
                            <label asp-for="RoleId" class="control-label">Roles <span class="text-danger">*</span></label>
                            <select id="RoleId" name="RoleId" class="form-control" required></select>
                            <span asp-validation-for="RoleId" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row" id="CEV">
                        <div class="form-group col-xl-6">
                            <label asp-for="Department" class="control-label">Division <span class="text-danger">*</span></label>
                            <select name="Department" id="Department" class="form-control" required>
                            </select>
                            <span asp-validation-for="Department" class="text-danger"></span>
                        </div>
                        <div class="form-group col-xl-6">
                            <label asp-for="SupervisorId" class="control-label">SuperVisor </label>
                            <select id="SupervisorId" name="SupervisorId" class="form-control"></select>
                            <span asp-validation-for="SupervisorId" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row" id="RM">
                        <div class="form-group col-lg-6">
                            <label asp-for="BroadSegment">Broad Segment <i class="text-danger">*</i></label>
                            <select id="BroadSegmentDropdown" asp-for="BroadSegment" required class="form-control form-control-sm"
                                    asp-items="@(new SelectList(Enum.GetValues(typeof(Segment)).Cast<Segment>().Select(e => new SelectListItem { Text = e.GetType().GetMember(e.ToString())[0].GetCustomAttributes(typeof(DisplayAttribute), false).OfType<DisplayAttribute>().FirstOrDefault()?.Name, Value = e.ToString() }), "Value", "Text"))">
                                <option value="" disabled selected>Select Broad Segment </option>
                            </select>
                            <span asp-validation-for="BroadSegment" class="text-danger"></span>
                        </div>
                        <div class="form-group col-lg-6">
                            <label asp-for="Unit">Unit <i class="text-danger">*</i></label>
                            <select id="UnitDropdown" name="Unit" required class="form-control form-control-sm">
                                <option value="" disabled selected>Select Unit*</option>
                            </select>
                            <span asp-validation-for="Unit" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            <input type="submit" value="Submit" class="btn btn-primary" />
                        </div>
                    </div>
                </form>

                <div>
                    <a asp-action="Index">Back to List</a>
                </div>
                <div id="loadingIndicator" style="display:none; position:fixed; top:50%; left:50%; transform:translate(-50%, -50%); z-index:1000;">
                    <div class="spinner-border" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
            </div>
        </div>
    </section>
</section>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery/dist/jquery-ui.min.js"></script>
<script src="~/bootstrap/js/bootstrap.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
<script src="~/lib/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
<script src="~/js/adminlte.min.js"></script>
<script src="~/js/dashboard.js"></script>
<script src="~/lib/chart.js/chart.min.js"></script>
<script src="~/lib/datatable/js/jquery.datatables.min.js"></script>
<script src="~/lib/datatable/js/datatables.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/datatables.responsive.min.js"></script>
<script src="~/lib/datatable/js/responsive.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/datatables.buttons.min.js"></script>
<script src="~/lib/datatable/js/buttons.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/jszip.min.js"></script>
<script src="~/lib/datatable/js/pdfmake.min.js"></script>
<script src="~/lib/datatable/js/vfs_fonts.js"></script>
<script src="~/lib/datatable/js/buttons.html5.min.js"></script>
<script src="~/lib/datatable/js/buttons.print.min.js"></script>
<script src="~/lib/datatable/js/buttons.colvis.min.js"></script>
<script src="~/lib/toastr/toastr.min.js"></script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("ScriptPartial/_ValidationScriptsPartial");
     
    }
}
<script>
    $(document).ready(function () {
        var UnitDropdown = $("#UnitDropdown");
        UnitDropdown.prop("disabled", true);
        $("#BroadSegmentDropdown").change(function () {
            UnitDropdown.prop("disabled", false);
            populateUnitDropdown();
        });
        populateUnitDropdown();

        function populateUnitDropdown() {
            var BroadSegmentDropdown = $("#BroadSegmentDropdown").val();
            console.log(BroadSegmentDropdown);
            UnitDropdown = $("#UnitDropdown");
            UnitDropdown.empty();
            UnitDropdown.append('<option value="" disabled selected>Select Unit</option>');

            switch (BroadSegmentDropdown) {
                case "WholesaleConventional":
                    UnitDropdown.append('<option value="LargeCorporate">Large Corporate</option>');
                    UnitDropdown.append('<option value="MediumCorporate">Medium Corporate</option>');
                    UnitDropdown.append('<option value="SmallCorporate">Small Corporate</option>');
                    UnitDropdown.append('<option value="WholesaleDistrict">Wholesale District</option>');
                    UnitDropdown.append('<option value="CooperativeAndFinancialInstitution">Cooperative and Financial Institution</option>');
                    UnitDropdown.append('<option value="StateOwnedEnterpriseAndOtherPublic">State Owned Enterprise & Other Public</option>');
                    UnitDropdown.append('<option value="RegionalGovernment">Regional Government</option>');
                    UnitDropdown.append('<option value="CentralGovernment">Central Government</option>');
                    break;
                case "WholesaleIFB":
                    UnitDropdown.append('<option value="IFBCorporate">Corporate</option>');
                    UnitDropdown.append('<option value="IFBSMEBanking">SME Banking</option>');
                    UnitDropdown.append('<option value="IFBDistrict">District</option>');
                    break;
                case "Retail":
                    UnitDropdown.append('<option value="Retail">Retail</option>');
                    break;
                case "Foreclosure":
                    UnitDropdown.append('<option value="Foreclosure">Foreclosure</option>');
                    break;
                case "Litigation":
                    UnitDropdown.append('<option value="Litigation">Litigation</option>');
                    break;
                case "AcquiredAssetAdministration":
                    UnitDropdown.append('<option value="AcquiredAssetAdministration">Acquired Asset Administration</option>');
                    break;
                case "Litigation":
                    UnitDropdown.append('<option value="FacilityManagement">Facility Management</option>');
                    break;
                default:
                    break;
            }
        }


        $.ajax({
            type: "GET",
            url: '/UserManagment/GetDistrict',
            dataType: 'json',
            success: function (datas) {

                console.log("your list of district are" + datas);
                var dropdown = $('#DistrictId');

                $(datas).each(function (index, district) {
                    dropdown.append($('<option></option>').val(district.Id).text(district.Name));
                });
            },
            error: function () {
                alert('Error getting roles.');
                console.log("your list of districts are" + datas);
            }
        });

        $.ajax({
            type: "GET",
            url: '/UserManagment/GetRoles',
            dataType: 'json',
            success: function (data) {
                console.log("your list of roles are" + data);
                var dropdown = $('#RoleId');
                dropdown.empty();
                dropdown.append($('<option></option>').val('').text('Select role for this user'));
                $(data).each(function (index, role) {

                    dropdown.append($('<option></option>').val(role.RoleId).text(role.Name));
                });
            },
            error: function () {
                alert('Error getting roles.');
                console.log("your list of roles are" + data);
            }
        });
        $("#RM").hide();
        $("#CEV").hide();

        $("#RoleId").change(function () {
            var selectedRole = $(this).find(":selected").text();
            console.log(selectedRole);
            if (selectedRole == 'Relation Manager') {
                $("#RM").show();
                $("#CEV").hide();
            } else {
                $("#RM").hide();
                $("#CEV").show();
                $('#Department').html(`
                  <option value="" selected disabled>Select valuation unit</option>
                  <option value="Mechanical">Mechanical</option>
                  <option value="Civil">Civil</option>
                  <option value="Agriculture">Agriculture</option>`);
            }
        });

        $("#Department").change(function () {
            var roleId = $("#RoleId").val();
            var Department = $("#Department").val();
            var districtId = $("#DistrictId").val();
            var dropdown = $('#SupervisorId');
            dropdown.empty();
            dropdown.append($('<option></option>').val('').text('Select Supervisor'));
            if (roleId) {
                $.ajax({
                    url: '/UserManagment/GetSupervisors',
                    type: 'GET',
                    data: { roleId: roleId, districtId: districtId, Department: Department },
                    dataType: 'json',
                    success: function (data) {
                        console.log(data);
                        if (data != null && data.length > 0) {
                            dropdown.prop('disabled', false);
                            $(data).each(function (index, supervisor) {
                                dropdown.append($('<option></option>').val(supervisor.Id).text(supervisor.Name));
                            });
                        } else {
                            dropdown.prop('disabled', true);
                        }
                    },
                    error: function () {
                        alert('Error getting supervisors.');
                        console.log("your list of supervisors are" + data);
                    }
                });
            } else {
            }
        });
    });
    $(document).ready(function () {
        $('#loadingIndicator').hide();
        $('#GetEmployeeInfo').click(function () {
            var empId = $('#emp_ID').val();

            // Check if empId is not empty
            if (empId) {
                // Show loading indicator
                $('#loadingIndicator').show(); // Add a loading element in your HTML

                $.ajax({
                    url: '/UserManagment/GetEmployeeInfo', // Adjust the URL based on your routing
                    type: 'GET',
                    data: { id: empId },
                    success: function (data) {
                        // Hide loading indicator
                        $('#loadingIndicator').hide();

                        // Check if data is null or empty
                        if (!data || $.isEmptyObject(data)) {
                            // Show toaster notification
                            toastr.warning('No employee information found for the provided ID.');
                            return;
                        }
                        $('#Name').val(data.DisplayName);
                        $('#Email').val(data.Email);
                        $('#title').val(data.jobTitle);
                        $('#Branch').val(data.Department);
                        $('#company').val(data.company);
                    },
                    error: function () {
                        // Hide loading indicator
                        $('#loadingIndicator').hide();

                        alert('Error retrieving employee information.');
                    }
                });
            } else {
                alert('Please enter an Employee ID.');
            }
        });
    });
</script>
<style>
    .spinner-border {
        width: 3rem; /* Size of the spinner */
        height: 3rem; /* Size of the spinner */
        border: 0.25em solid rgba(0, 0, 0, 0.1); /* Light border */
        border-top-color: #007bff; /* Color of the spinner */
        border-radius: 50%; /* Rounded */
        animation: spin 0.75s linear infinite; /* Spinning animation */
    }

    @@keyframes spin {
        to {
            transform: rotate(360deg);
        }
        /* Spin effect */
    }
</style>    