@model mechanical.Models.Entities.User
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery/dist/jquery-ui.min.js"></script>
<script src="~/bootstrap/js/bootstrap.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
<script src="~/lib/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
<script src="~/js/adminlte.min.js"></script>
<script src="~/js/dashboard.js"></script>
<script src="~/lib/chart.js/chart.min.js"></script>
<script src="~/lib/datatable/js/jquery.datatables.min.js"></script>
<script src="~/lib/datatable/js/datatables.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/datatables.responsive.min.js"></script>
<script src="~/lib/datatable/js/responsive.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/datatables.buttons.min.js"></script>
<script src="~/lib/datatable/js/buttons.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/jszip.min.js"></script>
<script src="~/lib/datatable/js/pdfmake.min.js"></script>
<script src="~/lib/datatable/js/vfs_fonts.js"></script>
<script src="~/lib/datatable/js/buttons.html5.min.js"></script>
<script src="~/lib/datatable/js/buttons.print.min.js"></script>
<script src="~/lib/datatable/js/buttons.colvis.min.js"></script>
<script src="~/lib/toastr/toastr.min.js"></script>

@{
    ViewData["Title"] = "Edit User";
}

<script>
    $(document).ready(function () {
        // AJAX requests to populate dropdowns for roles and districts
        $.ajax({
            type: "GET",
            url: '/UserManagment/GetRoles',
            dataType: 'json',
            success: function (data) {
                var dropdown = $('#RoleId');
                dropdown.empty(); // Clear existing options
                dropdown.append($('<option></option>').val('').text('Select role for this user')); // Add default option
                $(data).each(function (index, role) {
                    dropdown.append($('<option></option>').val(role.RoleId).text(role.Name));
                });

                // Set the selected role from the model
                dropdown.val('@Model.RoleId'); // Pre-select the role from the model

                // Load departments based on the pre-selected role
                updateDepartmentOptions(dropdown.find(":selected").text());
            },
            error: function () {
                alert('Error getting roles.');
            }
        });

        $.ajax({
            type: "GET",
            url: '/UserManagment/GetDistrict',
            dataType: 'json',
            success: function (datas) {
                var dropdown = $('#DistrictId');
                $(datas).each(function (index, district) {
                    dropdown.append($('<option></option>').val(district.Id).text(district.Name));
                });
                // Set the selected district from the model
                dropdown.val('@Model.DistrictId'); // Pre-select the district from the model
            },
            error: function () {
                alert('Error getting districts.');
            }
        });

        // Update department options based on selected role
        function updateDepartmentOptions(roleId) {
            var departmentOptions = '';
            console.log(roleId);
            if (roleId == 'Relation Manager') {
                departmentOptions = `
                        <option value="" selected disabled>Select Department</option>
                        <option value="Wholesale">Wholesale</option>
                        <option value="Retail">Retail</option>
                        <option value="Workout">Workout</option>
                        <option value="Legal">Legal</option>
                        <option value="Acquired Asset Administration">Acquired Asset Administration</option>
                        <option value="Facility Management">Facility Management</option>
                    `;
            } else {
                departmentOptions = `
                        <option value="" selected disabled>Select valuation unit</option>
                        <option value="Mechanical">Mechanical</option>
                        <option value="Civil">Civil</option>
                        <option value="Agriculture">Agriculture</option>
                    `;
            }

            $('#Department').html(departmentOptions);
            $('#Department').val('@Model.Department'); // Pre-select the department from the model
            console.log('@Model.Department');
        }

        $("#RoleId").change(function () {
            var selectedRole = $(this).text();
            updateDepartmentOptions(selectedRole); // Update department options based on selected role
        });
    });
</script>


<section class="content">
    <section class="col-xl-12 connectedSortable">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">
                    <i class="fas fa-user"></i>
                    Edit User Access
                </h3>
            </div>
            <div class="card-body">
                <form method="POST" action="/UserManagment/SaveEdited">
                    <input asp-for="Id" hidden required />
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="row">
                        <div class="form-group col-xl-5">
                            <label asp-for="emp_ID" class="control-label">Employee Id <span class="text-danger">*</span></label>
                            <div class="input-group" style="margin:0;">
                                <input asp-for="emp_ID" id="emp_ID" class="form-control" readonly required />
                                <input type="button" class="form-control btn btn-outline-primary col-lg-4" id="GetEmployeeInfo" value="Update Info" required>
                            </div>
                            <span asp-validation-for="emp_ID" class="text-danger"></span>
                        </div>
                        <div class="form-group col-xl-7">
                            <label asp-for="Name" class="control-label">Full name <span class="text-danger">*</span></label>
                            <input asp-for="Name" id="Name" class="form-control" readonly required />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-xl-7">
                            <label asp-for="Email" class="control-label">Email <span class="text-danger">*</span></label>
                            <input asp-for="Email" id="Email" class="form-control" readonly required />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                        <div class="form-group col-xl-5">
                            <label asp-for="title" class="control-label">Title <span class="text-danger">*</span></label>
                            <input asp-for="title" id="title" class="form-control" readonly required />
                            <span asp-validation-for="title" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-xl-6">
                            <label asp-for="Branch" class="control-label">Department <span class="text-danger">*</span></label>
                            <input asp-for="Branch" id="Branch" class="form-control" readonly required />
                            <span asp-validation-for="Branch" class="text-danger"></span>
                        </div>
                        <div class="form-group col-xl-6">
                            <label asp-for="company" class="control-label">Company <span class="text-danger">*</span></label>
                            <input asp-for="company" id="company" class="form-control" readonly required />
                            <span asp-validation-for="company" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-xl-7">
                            <label asp-for="PhoneNO" class="control-label">Phone Number</label>
                            <input asp-for="PhoneNO" class="form-control" />
                            <span asp-validation-for="PhoneNO" class="text-danger"></span>
                        </div>
                        <div class="form-group col-xl-5">
                            <label asp-for="DistrictId" class="control-label">Center <span class="text-danger">*</span></label>
                            <select id="DistrictId" name="DistrictId" class="form-control" required></select>
                            <span asp-validation-for="DistrictId" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <!-- Role Dropdown -->
                        <div class="form-group col-xl-4">
                            <label asp-for="RoleId" class="control-label">Roles <span class="text-danger">*</span></label>
                            <select id="RoleId" name="RoleId" class="form-control" required></select>
                            <span asp-validation-for="RoleId" class="text-danger"></span>
                        </div>

                        <!-- Division Dropdown (Hidden for Relation Manager) -->
                        <div class="form-group col-xl-6" id="DivisionSection">
                            <label asp-for="Department" class="control-label">Division <span class="text-danger">*</span></label>
                            <select name="Department" id="Department" class="form-control" required></select>
                            <span asp-validation-for="Department" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- RM Fields (Only Shown for Relation Manager) -->
                    <div class="row" id="RM" style="display: none;">
                        <div class="form-group col-lg-6">
                            <label asp-for="BroadSegment">Broad Segment <span class="text-danger">*</span></label>
                            <select id="BroadSegmentDropdown" asp-for="BroadSegment" required class="form-control form-control-sm"
                                    asp-items="@(new SelectList(Enum.GetValues(typeof(Segment)).Cast<Segment>().Select(e => new SelectListItem { Text = e.GetType().GetMember(e.ToString())[0].GetCustomAttributes(typeof(DisplayAttribute), false).OfType<DisplayAttribute>().FirstOrDefault()?.Name, Value = e.ToString() }), "Value", "Text"))">
                                <option value="" disabled selected>Select Broad Segment</option>
                            </select>
                            <span asp-validation-for="BroadSegment" class="text-danger"></span>
                        </div>

                        <div class="form-group col-lg-6">
                            <label asp-for="Unit">Unit <span class="text-danger">*</span></label>
                            <select id="UnitDropdown" name="Unit" required class="form-control form-control-sm">
                                <option value="" disabled selected>Select Unit</option>
                            </select>
                            <span asp-validation-for="Unit" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group">
                            <input type="submit" value="Update" class="btn btn-primary" /> <!-- Change button text to Update -->
                        </div>
                    </div>
                </form>

                <div>
                    <a asp-action="Index">Back to List</a>
                </div>
                <div id="loadingIndicator" style="display:none; position:fixed; top:50%; left:50%; transform:translate(-50%, -50%); z-index:1000;">
                    <div class="spinner-border" role="status">
                        <span class="sr-only">Loading...</span>
                    </div>
                </div>
            </div>
        </div>
    </section>
</section>

@section Scripts {
    @{
        await Html.RenderPartialAsync("ScriptPartial/_ValidationScriptsPartial");
        
    }
}
<script>
    $(document).ready(function () {
        $('#loadingIndicator').hide();
        $('#GetEmployeeInfo').click(function () {
            var empId = $('#emp_ID').val();
            if (empId) {
                $('#loadingIndicator').show();
                $.ajax({
                    url: '/UserManagment/GetEmployeeInfo',
                    type: 'GET',
                    data: { id: empId },
                    success: function (data) {
                        $('#loadingIndicator').hide();
                        if (!data || $.isEmptyObject(data)) {
                            toastr.warning('No employee information found for the provided ID.');
                            return;
                        }
                        $('#Name').val(data.DisplayName);
                        $('#Email').val(data.Email);
                        $('#title').val(data.jobTitle);
                        $('#Branch').val(data.Department);
                        $('#company').val(data.company);
                    },
                    error: function () {
                        $('#loadingIndicator').hide();
                        alert('Error retrieving employee information.');
                    }
                });
            } else {
                alert('Please enter an Employee ID.');
            }
        });
    });
</script>
<style>
    .spinner-border {
        width: 3rem; /* Size of the spinner */
        height: 3rem; /* Size of the spinner */
        border: 0.25em solid rgba(0, 0, 0, 0.1); /* Light border */
        border-top-color: #007bff; /* Color of the spinner */
        border-radius: 50%; /* Rounded */
        animation: spin 0.75s linear infinite; /* Spinning animation */
    }

    @@keyframes spin {
        to {
            transform: rotate(360deg);
        }
    }
</style>

<script>
    $(document).ready(function () {
        // Initially hide RM section
        $("#RM").hide();

        // Fetch and populate roles
        $.ajax({
            type: "GET",
            url: '/UserManagment/GetRoles',
            dataType: 'json',
            success: function (data) {
                var dropdown = $('#RoleId');
                dropdown.empty();
                dropdown.append($('<option></option>').val('').text('Select role for this user'));
                $(data).each(function (index, role) {
                    dropdown.append($('<option></option>').val(role.RoleId).text(role.Name));
                });

                // Preselect model role and apply logic
                dropdown.val('@Model.RoleId');
                setTimeout(function () {
                    const preselectedRole = $('#RoleId option:selected').text().trim();
                    toggleSectionsBasedOnRole(preselectedRole);
                }, 300);
            },
            error: function () {
                alert('Error getting roles.');
            }
        });

        // Role change listener
        $("#RoleId").change(function () {
            const selectedRole = $(this).find(":selected").text().trim();
            toggleSectionsBasedOnRole(selectedRole);
        });

        // Toggle between RM and Division sections
        function toggleSectionsBasedOnRole(roleName) {
            if (roleName === 'Relation Manager') {
                $("#RM").show();
                $("#DivisionSection").hide();
            } else {
                $("#RM").hide();
                $("#DivisionSection").show();
            }
        }
    });
</script>
<script>
    $(document).ready(function () {
        var UnitDropdown = $("#UnitDropdown");
        UnitDropdown.prop("disabled", true);
        $("#BroadSegmentDropdown").change(function () {
            UnitDropdown.prop("disabled", false);
            populateUnitDropdown();
        });
        populateUnitDropdown();

        function populateUnitDropdown() {
            var BroadSegmentDropdown = $("#BroadSegmentDropdown").val();
            console.log(BroadSegmentDropdown);
            UnitDropdown = $("#UnitDropdown");
            UnitDropdown.empty();
            UnitDropdown.append('<option value="" disabled selected>Select Unit</option>');

            switch (BroadSegmentDropdown) {
                case "WholesaleConventional":
                    UnitDropdown.append('<option value="LargeCorporate">Large Corporate</option>');
                    UnitDropdown.append('<option value="MediumCorporate">Medium Corporate</option>');
                    UnitDropdown.append('<option value="SmallCorporate">Small Corporate</option>');
                    UnitDropdown.append('<option value="WholesaleDistrict">Wholesale District</option>');
                    UnitDropdown.append('<option value="CooperativeAndFinancialInstitution">Cooperative and Financial Institution</option>');
                    UnitDropdown.append('<option value="StateOwnedEnterpriseAndOtherPublic">State Owned Enterprise & Other Public</option>');
                    UnitDropdown.append('<option value="RegionalGovernment">Regional Government</option>');
                    UnitDropdown.append('<option value="CentralGovernment">Central Government</option>');
                    break;
                case "WholesaleIFB":
                    UnitDropdown.append('<option value="IFBCorporate">Corporate</option>');
                    UnitDropdown.append('<option value="IFBSMEBanking">SME Banking</option>');
                    UnitDropdown.append('<option value="IFBDistrict">District</option>');
                    break;
                case "Retail":
                    UnitDropdown.append('<option value="Retail">Retail</option>');
                    break;
                case "Foreclosure":
                    UnitDropdown.append('<option value="Foreclosure">Foreclosure</option>');
                    break;
                case "Litigation":
                    UnitDropdown.append('<option value="Litigation">Litigation</option>');
                    break;
                case "AcquiredAssetAdministration":
                    UnitDropdown.append('<option value="AcquiredAssetAdministration">Acquired Asset Administration</option>');
                    break;
                case "FacilityManagement":
                    UnitDropdown.append('<option value="FacilityManagement">Facility Management</option>');
                    break;
                default:
                    break;
            }
        }


        $.ajax({
            type: "GET",
            url: '/UserManagment/GetDistrict',
            dataType: 'json',
            success: function (datas) {

                console.log("your list of district are" + datas);
                var dropdown = $('#DistrictId');

                $(datas).each(function (index, district) {
                    dropdown.append($('<option></option>').val(district.Id).text(district.Name));
                });
            },
            error: function () {
                alert('Error getting roles.');
                console.log("your list of districts are" + datas);
            }
        });

        // $.ajax({
        //     type: "GET",
        //     url: '/UserManagment/GetRoles',
        //     dataType: 'json',
        //     success: function (data) {
        //         console.log("your list of roles are" + data);
        //         var dropdown = $('#RoleId');
        //         dropdown.empty();
        //         dropdown.append($('<option></option>').val('').text('Select role for this user'));
        //         $(data).each(function (index, role) {

        //             dropdown.append($('<option></option>').val(role.RoleId).text(role.Name));
        //         });
        //     },
        //     error: function () {
        //         alert('Error getting roles.');
        //         console.log("your list of roles are" + data);
        //     }
        // });
        $("#RM").hide();
        $("#CEV").hide();

        $("#RoleId").change(function () {
            var selectedRole = $(this).find(":selected").text();
            console.log(selectedRole);
            if (selectedRole == 'Relation Manager') {
                $("#RM").show();
                $("#CEV").hide();
            }
            else if (selectedRole == 'Admin'){
                    $("#RM").hide();
                $("#CEV").show();
                $('#Department').html(`
                  <option value="" selected disabled>Select valuation unit</option>
                  <option value="Mechanical">Access Control</option>`);
                }
                else {
                $("#RM").hide();
                $("#CEV").show();
                $('#Department').html(`
                  <option value="" selected disabled>Select valuation unit</option>
                  <option value="Mechanical">Mechanical</option>
                  <option value="Civil">Civil</option>
                  <option value="Agriculture">Agriculture</option>`);
            }
        });

        $("#Department").change(function () {
            var roleId = $("#RoleId").val();
            var Department = $("#Department").val();
            var districtId = $("#DistrictId").val();
            var dropdown = $('#SupervisorId');
            dropdown.empty();
            dropdown.append($('<option></option>').val('').text('Select Supervisor'));
            if (roleId) {
                $.ajax({
                    url: '/UserManagment/GetSupervisors',
                    type: 'GET',
                    data: { roleId: roleId, districtId: districtId, Department: Department },
                    dataType: 'json',
                    success: function (data) {
                        console.log(data);
                        if (data != null && data.length > 0) {
                            dropdown.prop('disabled', false);
                            $(data).each(function (index, supervisor) {
                                dropdown.append($('<option></option>').val(supervisor.Id).text(supervisor.Name));
                            });
                        } else {
                            dropdown.prop('disabled', true);
                        }
                    },
                    error: function () {
                        alert('Error getting supervisors.');
                        console.log("your list of supervisors are" + data);
                    }
                });
            } else {
            }
        });
    });
    $(document).ready(function () {
        $('#loadingIndicator').hide();
        $('#GetEmployeeInfo').click(function () {
            var empId = $('#emp_ID').val();

            // Check if empId is not empty
            if (empId) {
                // Show loading indicator
                $('#loadingIndicator').show(); // Add a loading element in your HTML

                $.ajax({
                    url: '/UserManagment/GetEmployeeInfo', // Adjust the URL based on your routing
                    type: 'GET',
                    data: { id: empId },
                    success: function (data) {
                        // Hide loading indicator
                        $('#loadingIndicator').hide();

                        // Check if data is null or empty
                        if (!data || $.isEmptyObject(data)) {
                            // Show toaster notification
                            toastr.warning('No employee information found for the provided ID.');
                            return;
                        }
                        $('#Name').val(data.DisplayName);
                        $('#Email').val(data.Email);
                        $('#title').val(data.JobTitle);
                        $('#Branch').val(data.Department);
                        $('#company').val(data.Company);
                    },
                    error: function () {
                        // Hide loading indicator
                        $('#loadingIndicator').hide();

                        alert('Error retrieving employee information.');
                    }
                });
            } else {
                alert('Please enter an Employee ID.');
            }
        });
    });
</script>
@*
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/jquery/dist/jquery-ui.min.js"></script>
<script src="~/bootstrap/js/bootstrap.min.js"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
<script src="~/lib/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>
<script src="~/js/adminlte.min.js"></script>
<script src="~/js/dashboard.js"></script>
<script src="~/lib/chart.js/chart.min.js"></script>
<script src="~/lib/datatable/js/jquery.datatables.min.js"></script>
<script src="~/lib/datatable/js/datatables.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/datatables.responsive.min.js"></script>
<script src="~/lib/datatable/js/responsive.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/datatables.buttons.min.js"></script>
<script src="~/lib/datatable/js/buttons.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/jszip.min.js"></script>
<script src="~/lib/datatable/js/pdfmake.min.js"></script>
<script src="~/lib/datatable/js/vfs_fonts.js"></script>
<script src="~/lib/datatable/js/buttons.html5.min.js"></script>
<script src="~/lib/datatable/js/buttons.print.min.js"></script>
<script src="~/lib/datatable/js/buttons.colvis.min.js"></script>
<script src="~/lib/toastr/toastr.min.js"></script>

<script>
    $(document).ready(function () {
        // Make AJAX request to get roles
        $.ajax({
            type: "GET",
            url: '/UserManagment/GetRoles',
            dataType: 'json',
            success: function (data) {
                // Populate dropdown list with roles
                console.log("your list of roles are" + data);
                var dropdown = $('#RoleId');
                dropdown.empty(); // Clear existing options
                dropdown.append($('<option></option>').val('').text('Select role for this user')); // Add default option
                $(data).each(function (index, role) {
                    dropdown.append($('<option></option>').val(role.RoleId).text(role.Name));
                });
            },
            error: function () {
                alert('Error getting roles.');
                console.log("your list of roles are" + data);
            }
        });

        // Make AJAX request to get supervisors based on selected role
        $("#RoleId").change(function () {
            var selectedRole = $(this).find(":selected").text();
            console.log(selectedRole);
            if (selectedRole == 'Relation Manager') {
                $('#Department').html(`
                        <option value = "" selected disabled > Select Department </option>
                        <option value="Wholesale">Wholesale</option>
                        <option value="Retail">Retail</option>
                        <option value="Workout">Workout</option>
                        <option value="Legal">Legal</option>
                        <option value="Acquired Asset Administration">Acquired Asset Administration</option>
                        <option value="Facility Management">Facility Management</option>
                    `);
            } else {
                $('#Department').html(`
                        <option value="" selected disabled>Select valuation unit</option>
                        <option value="Mechanical">Mechanical</option>
                        <option value="Civil">Civil</option>
                        <option value="Agriculture">Agriculture</option>
                        `);
            }



            var roleId = $(this).val();
            var Department = $("#Department").val();
            var districtId = $("#DistrictId").val();
            var dropdown = $('#SupervisorId');
            dropdown.empty(); // Clear existing options
            dropdown.append($('<option></option>').val('').text('Select Supervisor')); // Add default option
            if (roleId) {
                // Make an AJAX request to retrieve the supervisors based on the selected role
                $.ajax({
                    url: '/UserManagment/GetSupervisors',
                    type: 'GET',
                    data: { roleId: roleId, districtId: districtId, Department: Department },
                    dataType: 'json',
                    success: function (data) {
                        if (data != null && data.length > 0) {
                            $(data).each(function (index, supervisor) {
                                dropdown.append($('<option></option>').val(supervisor.Id).text(supervisor.Name));
                            });
                        } else {
                            dropdown.prop('disabled', true);
                        }
                    },
                    error: function () {
                        alert('Error getting supervisors.');
                        console.log("your list of supervisors are" + data);
                    }
                });
            } else {
                dropdown.prop('disabled', true);
            }
        });
    });
</script>

<script>



    $(document).ready(function () {

        // Make AJAX request to get roles

        $.ajax({

            type: "GET",

            url: '/UserManagment/GetDistrict',

            dataType: 'json',

            success: function (datas) {

                // Populate dropdown list with roles

                console.log("your list of district are" + datas);

                var dropdown = $('#DistrictId');

                // dropdown.append($('<option></option>').val(0).text('Select District for this user'));

                $(datas).each(function (index, district) {

                    dropdown.append($('<option></option>').val(district.Id).text(district.Name));

                });

            },

            error: function () {

                alert('Error getting roles.');

                console.log("your list of districts are" + datas);



            }

        });

    });
</script>

@{
    ViewData["Title"] = "Edit";
}

<hr />



<div class="card card-info">
    <div class="card-header">
        <h3 class="card-title">Edit User Data</h3>
    </div>
    <div class="card-body">

        <div class="row">
            <div class="col-md-4">
                <form method="post" action="/UserManagment/SaveEdited">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="Id" />
                    <div class="form-group">
                        <label asp-for="Name" class="control-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Email" class="control-label"></label>
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="PhoneNO" class="control-label">Phone Number</label>
                        <input asp-for="PhoneNO" class="form-control" />
                        <span asp-validation-for="PhoneNO" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="emp_ID" class="control-label">Employee Id:</label>
                        <input asp-for="emp_ID" class="form-control" />
                        <span asp-validation-for="emp_ID" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="DistrictId" class="control-label"></label>
                        <select id="DistrictId" name="DistrictId" class="form-control" required></select>
                        <span asp-validation-for="DistrictId" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="Branch" class="control-label"></label>
                        <input asp-for="Branch" class="form-control" />
                        <span asp-validation-for="Branch" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="RoleId" class="control-label">Roles</label>
                        <select id="RoleId" name="RoleId" class="form-control" required></select>
                        <span asp-validation-for="RoleId" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="SupervisorId" class="control-label">Super Visor:</label>
                        <select id="SupervisorId" name="SupervisorId" class="form-control"></select>
                        <span asp-validation-for="SupervisorId" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Department" class="control-label">Department</label>
                        <select name="Department" id="Department" class="form-control" required>
                        </select>
                        <span asp-validation-for="Department" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Status" class="control-label"></label>
                        <select asp-for="Status" class="form-control" id="Status" name="Status">
                            <option value="Activated">Activate</option>
                            <option value="Deactivated">Deactivate</option>
                        </select>
                        <span asp-validation-for="Status" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>

        <div>
            <a asp-action="Index">Back to List</a>
        </div>

    </div>

</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("ScriptPartial/_ValidationScriptsPartial");
    }
}
@* 
@model CreditBackOffice.Models.CreateUser

<h1>Edit User</h1>

@using (Html.BeginForm("Edit", "UserManagement", FormMethod.Post, new { action = "/UserManagment/Edit" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.Name)
        @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email)
        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Email)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.District)
        @Html.TextBoxFor(model => model.District, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.District)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Branch)
        @Html.TextBoxFor(model => model.Branch, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Branch)
    </div>

    <!-- Add more form fields for other properties of the CreateUser model -->

    <input type="submit" value="Save" class="btn btn-primary" />
} *@