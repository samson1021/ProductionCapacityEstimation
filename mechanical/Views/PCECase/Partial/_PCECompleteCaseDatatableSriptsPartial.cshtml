<script src="~/lib/datatable/js/jquery.datatables.min.js"></script>
<script src="~/lib/datatable/js/datatables.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/datatables.responsive.min.js"></script>
<script src="~/lib/datatable/js/responsive.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/datatables.buttons.min.js"></script>
<script src="~/lib/datatable/js/buttons.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/jszip.min.js"></script>
<script src="~/lib/datatable/js/pdfmake.min.js"></script>
<script src="~/lib/datatable/js/vfs_fonts.js"></script>
<script src="~/lib/datatable/js/buttons.html5.min.js"></script>
<script src="~/lib/datatable/js/buttons.print.min.js"></script>
<script src="~/lib/datatable/js/buttons.colvis.min.js"></script>
<script src="~/lib/toastr/toastr.min.js"></script>
<script>
    $(document).ready(function () {
        var CaseId = $('#CaseId').val();
        var caseCollateralsTable;

        function initializeDataTable(data) {
            caseCollateralsTable = $('#caseCollaterals').DataTable({
                language: {
                    emptyTable: "There is no PCE register for this case please click the above add button to add PCE"
                },
                responsive: true,
                pageLength: 8,
                lengthChange: false,
                autoWidth: false,
                buttons: ["copy", "csv", "excel", { extend: 'pdf', title: 'My Case - pdf' }, { extend: 'print', title: 'My Case - Print' }, "colvis"],
                data: data,
                columns: [
                    {
                        data: null,
                        render: function (data, type, row, meta) {
                            return '<input class="purple-checkbox" type="checkbox"  value="' + data.Id + '">';
                        }
                    },
                    { data: 'PropertyOwner', width: '20%' },
                    { data: 'Role', width: '20%' },
                    { data: 'Category', width: '25%' },
                    { data: 'Type', width: '25%' },
                    {
                        data: 'Id',
                        width: '10%',
                        render: function (data, type, row, meta) {
                            return '<a href="Url.Action("Detail", "ProductionCapacity")?Id=' + data + '">Details';
                        }
                    }
                ]
            }).buttons().container().appendTo('#caseCollaterals_wrapper .col-md-6:eq(0)');
        }

        function loadCollaterals() {
            $.ajax({
                url: '/ProductionCapacity/GetRMCompleteCollaterals?PCECaseId=' + CaseId,
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    if ($.fn.DataTable.isDataTable('#caseCollaterals')) {
                        var caseCollateralsTable = $('#caseCollaterals').DataTable();
                        caseCollateralsTable.destroy();
                    }
                    initializeDataTable(data);
                },
                error: function (error) {
                    toastr.error("Failed to load collaterals");
                    console.log(error);
                }
            });
        }

        loadCollaterals();
    });


    $('#assignButton').on('click', function () {

        var checkedCollaterals = $('.purple-checkbox:checked');
        var selectedCollateralIds = [];

        checkedCollaterals.each(function () {
            var collateralId = $(this).val();
            selectedCollateralIds.push(collateralId);
        });
        if (selectedCollateralIds.length === 0) {
            toastr.error('Please select at least one PCE');
        } else {
            $('#selectedCollateralIds').val(selectedCollateralIds.join(','));

            $('#SendForEvaluationModal').modal('show');
        }
    });

    $('#sendEvaluationButton').on('click', function () {

        var checkedCollaterals = $('.purple-checkbox:checked');
        var selectedCollateralIds = [];

        checkedCollaterals.each(function () {
            var collateralId = $(this).val();
            selectedCollateralIds.push(collateralId);
        });
        if (selectedCollateralIds.length === 0) {
            toastr.error('Please select at least one PCE');
        } else {
            $('#selectedCollateralIds').val(selectedCollateralIds.join(','));

            $('#SendForEvaluationModal').modal('show');
        }
    });

    fetch('/UserManagment/GetDistrict')
        .then(response => response.json())
        .then(data => {
            var selectOption = $('<option selected disabled></option>').attr('value', '').text('Select Valuation Center');
            $('#CenterDropdown').append(selectOption);
            data.forEach(function (district) {
                var option = $('<option></option>').attr('value', district.Id).text(district.Name);
                $('#CenterDropdown').append(option);

            });
        })
        .catch(error => {
            console.log('Error fetching District data:', error);
        });


    $('#selectAllCheckbox').on('click', function () {
        var isChecked = $(this).prop('checked');
        $('.purple-checkbox').prop('checked', isChecked);
    });

    $('#caseCollaterals tbody').on('change', '.purple-checkbox', function () {
        var allChecked = $('.purple-checkbox').length === $('.purple-checkbox:checked').length;
        $('#selectAllCheckbox').prop('checked', allChecked);
    });
    $('#assignForm').submit(function (e) {
        e.preventDefault();

        var formData = new FormData(this);

        $.ajax({
            url: '/PCECase/SendProductionForReestimation',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                toastr.success(response.message);
                $('#SendForEvaluationModal').modal('hide');
                $('#assignForm')[0].reset();
                location.reload();
            },
            error: function (xhr, textStatus, errorThrown) {
                var error = xhr.responseJSON;
                toastr.error(error.message);
            }
        });
    });

</script>
