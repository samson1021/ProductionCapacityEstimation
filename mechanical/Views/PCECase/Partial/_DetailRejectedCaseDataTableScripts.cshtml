@using mechanical.Models.PCE.Enum.ProductionCapacity
<script src="~/lib/datatable/js/jquery.datatables.min.js"></script>
<script src="~/lib/datatable/js/datatables.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/datatables.responsive.min.js"></script>
<script src="~/lib/datatable/js/responsive.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/datatables.buttons.min.js"></script>
<script src="~/lib/datatable/js/buttons.bootstrap4.min.js"></script>
<script src="~/lib/datatable/js/jszip.min.js"></script>
<script src="~/lib/datatable/js/pdfmake.min.js"></script>
<script src="~/lib/datatable/js/vfs_fonts.js"></script>
<script src="~/lib/datatable/js/buttons.html5.min.js"></script>
<script src="~/lib/datatable/js/buttons.print.min.js"></script>
<script src="~/lib/datatable/js/buttons.colvis.min.js"></script>
<script src="~/lib/toastr/toastr.min.js"></script>
<script>
    console.log("debug");
    $(document).ready(function () {
        $('#UpdateSchedule').on('click', function (event) {
            event.preventDefault();
            $('#datetimepicker-modal').modal('show');
        });
        $('#datetimepicker-form').submit(function (event) {
            event.preventDefault();
            var formData = new FormData(this);
            var Id = $('#CaseSchedulleId').val();
            formData.append('Id', Id);

            $.ajax({
                url: '/MOPCECase/UpdateSchedule',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    location.reload();
                },
                error: function () {
                    alert('Error occurred while updating the date.');
                }
            });
        });
        $('#AcceptButton').click(function (event) {
            event.preventDefault();
            var formData = new FormData();
            var Id = $('#CaseScheduleId').val();
            formData.append('Id', Id);

            $.ajax({
                url: '/MOPCECase/ApproveSchedule',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    location.reload();
                },
                error: function () {
                    alert('Error occurred while updating the date.');
                }
            });
        });



        fetch('/UserManagment/GetDistrict')
            .then(response => response.json())
            .then(data => {
                var selectOption = $('<option selected disabled></option>').attr('value', '').text('Select Valuation Center');
                $('#CenterDropdown').append(selectOption);
                data.forEach(function (district) {
                    var option = $('<option></option>').attr('value', district.Id).text(district.Name);
                    $('#CenterDropdown').append(option);
                });
            })
            .catch(error => {
                console.log('Error fetching District data:', error);
            });

        var CaseId = $('#CaseId').val();
        $('#addCollateralButton').click(function () {
            $('#addCollateralModal').modal('show');
        });
        $('#proposeNewScheduleButton').click(function () {
            $('#proposeNewSchedule-modal').modal('show');
        });
        var caseCollateralsTable;




        function loadComments() {
            $.ajax({
                url: '/CaseComment/GetCaseComments?CaseId=' + CaseId,
                method: 'GET',
                success: function (data) {
                    var currentUserID = data.userId;
                    var caseComments = data.caseComments;
                    var countComment = data.caseComments.length;
                    $(".CommentBage").text(countComment);
                    var users = [];

                    if (caseComments && caseComments.length > 0) {
                        caseComments.forEach(function (comment) {
                            var chatMsg = $('<div>').addClass('direct-chat-msg');
                            var chatInfos = $('<div>').addClass('direct-chat-infos clearfix');
                            var chatName = $('<a>');

                            var chatImg = $('<a>');
                            var chatImgInner = $('<img>').attr('src', '/img/avatar5.png').addClass('direct-chat-img');
                            var chatText = $('<div>').addClass('direct-chat-text');

                            chatName.attr('href', '/UserManagment/Profile/' + comment.AuthorId);
                            chatImg.attr('href', '/UserManagment/Profile/' + comment.AuthorId);
                            chatImg.append(chatImgInner);

                            var createdAt = new Date(comment.CreatedAt);


                            chatText.text(comment.Content);

                            if (comment.AuthorId === currentUserID) {
                                var chatTimestamp = $('<span>').addClass('direct-chat-timestamp');
                                $('<span>').addClass('direct-chat-name float-right').text(comment.AuthorName).appendTo(chatName);
                                chatMsg.addClass('right');
                            } else {
                                var chatTimestamp = $('<span>').addClass('direct-chat-timestamp float-right');
                                $('<span>').addClass('direct-chat-name').text(comment.AuthorName).appendTo(chatName);
                            }
                            var formattedDate = formatDate(createdAt);
                            chatTimestamp.text(formattedDate);

                            chatInfos.append(chatName, chatTimestamp);
                            chatMsg.append(chatInfos, chatImg, chatText);
                            $('.direct-chat-messages').append(chatMsg);

                            var existingUser = users.find(function (user) {
                                return user.id === comment.AuthorId;
                            });

                            if (!existingUser) {
                                var newUser = {
                                    id: comment.AuthorId,
                                    name: comment.AuthorName,
                                    avatar: '/img/avatar5.png',
                                    lastMessage: comment.Content,
                                    date: formattedDate
                                };
                                users.push(newUser);
                            }
                        });
                        populateContactList(users);
                    } else {
                        var noCommentsMsg = $('<div>').addClass('no-comments-msg').text('There are no comments related to this case.');
                        $('.direct-chat-messages').append(noCommentsMsg);
                    }
                },
                error: function () {
                    console.log('An error occurred while retrieving case comments.');
                }
            });
        }
        function populateContactList(users) {
            var contactList = $('.contacts-list');
            contactList.empty();

            users.forEach(function (user) {
                var listItem = $('<li>');
                var link = $('<a>').attr('href', '/UserManagment/Profile/' + user.id);
                var avatarImg = $('<img>').addClass('contacts-list-img').attr('src', user.avatar);
                var infoDiv = $('<div>').addClass('contacts-list-info');
                var nameSpan = $('<span>').addClass('contacts-list-name').text(user.name);
                var dateSpan = $('<small>').addClass('contacts-list-date float-right').text(formatDate(user.date));
                var messageSpan = $('<span>').addClass('contacts-list-msg').text(user.lastMessage);

                infoDiv.append(nameSpan, dateSpan);
                link.append(avatarImg, infoDiv, messageSpan);
                listItem.append(link);
                contactList.append(listItem);
            });
        }
        function formatDate(date) {
            var options = { year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric', hour12: true };
            return date.toLocaleString('en-US', options);
        }

        loadComments();

        function sendMessage(message, CaseId) {
            var requestData = {
                Content: message,
                CaseId: CaseId
            };

            $.ajax({
                url: '/CaseComment/CreateCaseComment',
                method: 'POST',
                data: requestData,
                success: function (response) {
                    console.log(response);
                    $('#messageinput').val('');
                    var chatMessages = $('.direct-chat-messages');
                    var scrollHeight = chatMessages[0].scrollHeight;
                    chatMessages.scrollTop(scrollHeight);
                },
                error: function () {
                    console.log('Error while sending the message.');
                }
            });
        }



        // do Manufactirung



        var CaseId = $('#CaseId').val();
        function initializeDataTable(data) {
            caseCollateralsTable = $('#caseCollaterals').DataTable({
                language: {
                    emptyTable: "There is no Rejected Collaterals in this PCE case"
                },
                responsive: true,
                pageLength: 8,
                lengthChange: false,
                autoWidth: false,
                buttons: ["copy", "csv", "excel", { extend: 'pdf', title: 'My Case - pdf' }, { extend: 'print', title: 'My Case - Print' }, "colvis"],
                data: data,
                columns: [
                    {
                        data: null,
                        render: function (data, type, row, meta) {
                            return '<input class="purple-checkbox" type="checkbox"  value="' + data.Id + '">';
                        }
                    },
                    { data: 'PropertyOwner', width: '25%' },
                    { data: 'Role', width: '25%' },
                    { data: 'ProductionType', width: '35%' },

                    {
                        data: 'Id',
                        width: '10%',
                        render: function (data, type, row, meta) {
                            return '<a href="@Url.Action("Detail", "ProductionCapacity")?Id=' + data + '">Details | </a><a href="@Url.Action("Edit", "ProductionCapacity")?Id=' + data + '"> Edit | </a> <a class="delete-link" href="#" data-id=' + data + '><span class="text-danger"> Delete</span></a>';
                        
                        }
                  
                    }
                ]
            }).buttons().container().appendTo('#caseCollaterals_wrapper .col-md-6:eq(0)');


        }

        function loadCollaterals() {
            $.ajax({
                url: '/ProductionCapacity/GetRmRejectedProductions?PCECaseId=' + CaseId,
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    if ($.fn.DataTable.isDataTable('#caseCollaterals')) {
                        var caseCollateralsTable = $('#caseCollaterals').DataTable();
                        caseCollateralsTable.destroy();
                    }
                    initializeDataTable(data);
                },
                error: function (error) {
                    toastr.error("Failed to load Production Capcity");
                }
            });
        }

        loadCollaterals();
        loadCollaterals();




        var chatMessages = $('.direct-chat-messages');
        var scrollHeight = chatMessages[0].scrollHeight;
        chatMessages.scrollTop(scrollHeight);

        //$('#custom-tabs-four-profile-tab').on('shown.bs.tab', function (e) {
        //    loadCollaterals();
        //});

        // $("#IndusteryProp").hide();
        // $("#MVprop").hide();

        var typeDropdown = $("#typeDropdown");
        typeDropdown.prop("disabled", true);


        $("#categoryDropdown").change(function () {
            typeDropdown.prop("disabled", false);
            populateTypeDropdown();
        });

        populateTypeDropdown();
        var chatMessages = $('.direct-chat-messages');
        var scrollHeight = chatMessages[0].scrollHeight;
        chatMessages.scrollTop(scrollHeight);

        $('#proposeNewSchedule-form').submit(function (event) {
            event.preventDefault();
            var formData = new FormData(this);
            var Id = $('#CaseScheduleId').val();
            formData.append('id', Id);

            $.ajax({
                url: '/Case/CreateSchedule',
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function (response) {
                    location.reload();
                    // Handle success response
                },
                error: function () {
                    $('#evaluationForm').append('<p class="text-danger">Error occurred while creating the schedule.</p>');
                }
            });
        });

    });
</script>
