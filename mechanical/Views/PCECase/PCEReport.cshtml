@using mechanical.Models.PCE.Dto.PCECaseDto
@using mechanical.Models.PCE.Entities
@using mechanical.Models.Dto.UploadFileDto

@{
    var PCECase = ViewData["PCECase"] as PCECase;
    var productions = ViewData["Productions"] as List<ProductionCapacity>;
    var PCEEvaluations = ViewData["PCEEvaluations"] as List<PCEEvaluationDto> ?? new List<PCEEvaluationDto>();
    var evaluatorReport = ViewData["EvaluatorReport"] as EvaluatorReportDto;
    var Signiture = ViewData["Signiture"] as CreateUser;
    var productionFiles = ViewData["ProductionFiles"] as IEnumerable<ReturnFileDto>;
}




<style>
    .content {
        font-family: 'Times New Roman', Times, serif;
        font-size: 12pt;
        line-height: 1.5;
        width: 210mm;
        margin: 0 auto;
        padding: 0mm;
        box-sizing: border-box;
    }

    .table {
        width: 100%;
    }

    .table-borderless td,
    .table-borderless th {
        border: none;
        vertical-align: top;
    }

    .table td, .table th {
        word-break: break-word;
        overflow-wrap: break-word;
        white-space: normal;
        hyphens: auto;
    }

    .evaluation-card {
        border: none;
        margin-bottom: 1rem;
    }


    .btn-purple {
        background-color: #6f42c1;
        color: white;
        padding: 0.5rem 1rem;
        border: none;
    }

    .underline {
        border-bottom: 1px solid #000;
        display: inline-block;
        min-width: 50px;
    }

    .pdf-stamp {
        position: absolute;
        bottom: 20mm;
        left: 0;
        right: 0;
        text-align: center;
        opacity: 0.5; /* Make it slightly transparent */
        z-index: 1000;
        display: none !important; /* Hidden by default */
    }

    .page1-stamp{
        display:none !important;
    }

    /* Print-specific styles */
    @@media print {
        /* Hide unnecessary elements */
        .printbtn, .downloadbtn, #requieddoc,
        .footer, footer{
            display: none !important;
        }

        .page1-stamp{
            display:block !important;
        }

        .pdf-stamp {
            display: block !important; /* Show only when printing */
            position: fixed;
            bottom: 20mm;
            page-break-inside: avoid;
            break-inside: avoid;
        }

        .pdf-page {
            position: relative;
            page-break-after: auto;
            page-break-inside: avoid;
        }
      
        
        /* Two-column layout */
        .two-column-print {
            display: flex;
            width: 100%;
            margin-bottom: 5mm;
        }
        
        .print-column {
            width: 48%;
            padding: 0 1%;
        }
        
        .print-column:first-child {
            padding-left: 0;
        }
        
        .print-column:last-child {
            padding-right: 0;
        }
        
        .print-column p {
            margin-bottom: 2mm;
            page-break-inside: avoid;
        }

   
        
        /* Page margins and numbering */
        @@page {
            size: A4;
            margin: 15mm 15mm 25mm 15mm; /* Top, Right, Bottom, Left */
            /* Stamp positioning */
        // @@bottom-center {
        //     content: "";
        //     background-image: url('@@Url.Content("~/img/stamp.png")');
        //     background-size: 100px auto;
        //     background-repeat: no-repeat;
        //     background-position: center;
        //     width: 100px;
        //     height: 50px; /* Adjust based on your stamp's aspect ratio */
        //     opacity: 0.5;
        //     margin-bottom: 5mm;
        // }

            /* Page number at bottom right */
           @@bottom-right {
                content: "Page " counter(page);
                font-size: 10pt;
                font-family: 'Times New Roman', Times, serif;
            }
        }

        .stamp-fallback {
            display: none;
        }

        .stamp-fallback {
            display: none;
        }

        #requieddoc{
            display:none !important;
        }
    }

  

</style>
<section class="content">
  

    <div class="d-flex justify-content-end mb-3">
        <button id="print-btn" class="btn btn-purple printbtn mr-2 mt-2">
            <i class="fas fa-print"></i> Print
        </button>
        <!-- <button id="download-btn" class="btn btn-purple downloadbtn">
             <i class="fas fa-file-pdf"></i> Download PDF
         </button>-->
    </div>

    <!-- First Page -->
    <div class="pdf-page">
        <div class="d-flex justify-content-between align-items-center">
            <div></div>
            <div class="d-flex align-items-center">
                <img src="@Url.Content("~/img/cbelogo.png")" alt="Logo" style="max-height: 50px;">
                <h4 class="mb-0 ml-3">Commercial Bank of Ethiopia</h4>
            </div>
            <div></div>
        </div>

        <hr class="my-2 border-dark">
        
        <div class="text-center">
            <h5>Production Capacity Estimation</h5>
        </div>
        <div class="text-right">
            <p>Date: <span class="underline">@DateTime.Now.ToString("dd/MM/yyyy")</span></p>
            <p>Reference No: <span class="underline">@PCECase.CaseNo</span></p>
        </div>

        <h5 class="mt-4">A. General Data Collection</h5>

        <table class="table table-borderless">
            <colgroup>
                <col style="width: 8%;">
                <col style="width: 32%;">
                <col style="width: 60%;">
            </colgroup>
            <tbody>
                <tr>
                    <td>1.</td>
                    <td>Segment:</td>
                    <td><span class="underline">@PCECase.Segment</span></td>
                </tr>
                <tr>
                    <td>2.</td>
                    <td>Applicant name:</td>
                    <td><span class="underline">@PCECase.ApplicantName</span></td>
                </tr>
                <tr>
                    <td>3.</td>
                    <td>Production Machine Location:</td>
                    <td>
                        <span>Town:</span>
                        <span class="underline">@productions[0].Region</span>
                        <span class="ml-2">Sub-City:</span>
                        <span class="underline">@productions[0].SubCity</span>
                        <span class="ml-2">Woreda:</span>
                        <span class="underline">@productions[0].Wereda</span>
                    </td>
                </tr>
                <tr>
                    <td>4.</td>
                    <td>Business License no:</td>
                    <td><span class="underline">@productions[0].BusinessLicenseNumber</span></td>
                </tr>
                <tr>
                    <td>5.</td>
                    <td>LHC number:</td>
                    <td><span class="underline">@productions[0].MachineryInstalledPlace</span></td>
                </tr>
                <tr>
                    <td></td>
                    <td class="pl-4">Owner Name in LHC:</td>
                    <td><span class="underline">@productions[0].OwnerName</span></td>
                </tr>
                <tr>
                    <td>6.</td>
                    <td>Equipment Type:</td>
                    <td><span class="underline">@productions[0].Type</span></td>
                </tr>
                <tr>
                    <td>7.</td>
                    <td>Year of manufacturing:</td>
                    <td>
                        <span class="underline">@productions[0].ManufactureYear</span>
                        <span class="ml-2">Country of Origin:</span>
                        <span class="underline">@productions[0].CountryOfOrigin</span>
                    </td>
                </tr>
                <tr>
                    <td>8.</td>
                    <td>Place of inspection:</td>
                    <td>
                        <span class="underline">@PCEEvaluations[0].InspectionPlace</span>
                        <span class="ml-2">Date:</span>
                        <span class="underline">@PCEEvaluations[0].InspectionDate</span>
                    </td>
                </tr>
                <tr>
                    <td>9.</td>
                    <td>Purpose of estimation:</td>
                    <td><span class="underline">@productions[0].Purpose</span></td>
                </tr>
                <tr>
                    <td>10.</td>
                    <td>Technical obsolescence:</td>
                    <td><span class="underline">@PCEEvaluations[0].TechnicalObsolescenceStatus</span></td>
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                <td>
                        <div class="page1-stamp">
                            <img src="@Url.Content("~/img/stamp.png")" alt="Official Stamp" style="max-width: 150px; height: auto;" />
                        </div>
                </td>
                </tr>
            </tbody>
        </table>
        </table>
        </table>
    
    </div>

    <!-- Second Page -->
    <div class="pdf-page page-break">

        @if (PCEEvaluations.Any())
        {
            foreach (var (evaluation, index) in PCEEvaluations.Select((e, i) => (e, i + 1)))
            {
                <div class="evaluation-card ">
                    <div class="">
                        <h5>B. Production Capacity Estimation Summary</h5>
                        <br/>
                    </div>
                    <div class="">

                        <div class="row two-column-print">
                            <div class="col-md-6 print-column">
                                <p><strong>Machine Name:</strong> @evaluation.MachineName</p>
                                <p><strong>Production Line:</strong> @evaluation.ProductionLineType</p>
                                <p><strong>Country of Origin:</strong> @evaluation.CountryOfOrigin</p>
                                <p><strong>Technical Status:</strong> @evaluation.TechnicalObsolescenceStatus</p>
                            </div>
                            <div class="col-md-6 print-column">
                                <p><strong>Functionality:</strong> @evaluation.MachineFunctionalityStatus</p>
                                <p><strong>Inspection Place:</strong> @evaluation.InspectionPlace</p>
                                <p><strong>Inspection Date:</strong> @evaluation.InspectionDate.ToString("dd/MM/yyyy")</p>
                                <p>
                                    <strong>Inspection Duration:</strong>
                                    @if (evaluation.TimeConsumedToCheck != null)
                                    {
                                        <span>From @evaluation.TimeConsumedToCheck.Start.ToString("g") To @evaluation.TimeConsumedToCheck.End.ToString("g")</span>
                                    }
                                    else
                                    {
                                        <span>N/A</span>
                                    }
                                </p>
                            </div>
                        </div>

                        @if (evaluation.HasInputOutputData && evaluation.ProductionLines?.Any() == true)
                        {
                            <h6 class="mt-3">Production Lines:</h6>
                            <table class="table table-bordered">
                                <thead class="bg-light">
                                    <tr>
                                        <th style="width: 2%;">#</th>
                                        <th style="width: 16%;">Line Name</th>
                                        <th style="width: 13%;">Output Type</th>
                                        <th style="width: 13%;">Actual Capacity</th>
                                        <th style="width: 13%;">Design Capacity</th>
                                        <th style="width: 13%;">Attainable Capacity</th>
                                        <th style="width: 13%;">Unit/Measure</th>
                                        <th style="width: 8%;">Total Input</th>
                                        <th style="width: 8%;">Conversion Ratio</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var (line, lineIndex) in evaluation.ProductionLines.Select((l, i) => (l, i + 1)))
                                    {
                                        <tr>
                                            <td>@lineIndex</td>
                                            <td>@line.LineName</td>
                                            <td>@line.OutputType</td>
                                            <td>@line.ActualCapacity</td>
                                            <td>@(line.DesignCapacity?.ToString() ?? "N/A")</td>
                                            <td>@line.AttainableCapacity</td>
                                            <td>@line.ProductionUnit/@line.ProductionMeasurement</td>
                                            <td>@line.TotalInput</td>
                                            <td>@line.ConversionRatio</td>
                                        </tr>
                                        @if (line.ProductionLineInputs?.Any() == true)
                                        {
                                            <tr class="bg-light">
                                                <td colspan="9">
                                                    <strong>Inputs for @line.LineName:</strong>
                                                    <table class="table table-sm mb-0 m-10 p-10">
                                                        <thead>
                                                            <tr>
                                                                <th style="width: 30%;">Type</th>
                                                                <th style="width: 25%;">Quantity</th>
                                                                <th style="width: 25%;">Unit</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            @foreach (var input in line.ProductionLineInputs)
                                                            {
                                                                <tr>
                                                                    <td>@input.Type</td>
                                                                    <td>@input.Quantity</td>
                                                                    <td>@input.Unit</td>
                                                                </tr>
                                                            }
                                                        </tbody>
                                                    </table>
                                                    <span>&nbsp;</span>
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        }
                        else if (evaluation.Justifications?.Any() == true)
                        {
                            <h6 class="mt-3">Justifications:</h6>
                            <ul class="list-group">
                                @foreach (var justification in evaluation.Justifications)
                                {
                                    <li class="list-group-item">
                                        <strong>@justification.Reason:</strong> @justification.JustificationText
                                    </li>
                                }
                            </ul>
                        }

                        <h6 class="mt-3">Factors Affecting Capacity:</h6>
                        <div class="card card-body bg-light">@(evaluation.FactorsAffectingProductionCapacity ?? "N/A")
                        </div>

                        <h6 class="mt-3">Remarks: </h6>
                        <div class="card card-body bg-light">@(evaluation.SurveyRemark ?? "N/A")
                        </div>
                    </div>
                    <div class="card-footer">
                        <b>Evaluated by: &nbsp; &nbsp;</b> <u>@(evaluatorReport?.EvaluatorName ?? "N/A")</u>
                        <b>&nbsp; &nbsp; Signature: </b>
                        @if (Signiture?.Signatures != null)
                        {
                            <img src="@Url.Content("~/" + Signiture.Signatures.SignatureFile.Path)" alt="Signature" style="max-width: 70px; max-height: 60px;">
                        }
                        else
                        {
                            <span><img src="" alt="signature" /></span>
                        }
                        &nbsp; &nbsp; <b>On</b> &nbsp; <u>@(evaluation.CreatedAt.ToString("dd/MM/yyyy")) </u>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="alert alert-warning">No production evaluations available</div>
        }
        <div class="pdf-stamp">
            <img src="@Url.Content("~/img/stamp.png")" alt="Official Stamp" style="max-width: 150px; height: auto;" />
        </div>
    </div>

    <!-- Documents Section -->
    <div id="requieddoc" class="pdf-page page-break">
        <h5>D. Documents used for PCE</h5>
        <table class="table">
            <thead>
                <tr>
                    <th style="width: 30%;">File Name</th>
                    <th style="width: 25%;">Category</th>
                    <th style="width: 25%;">Content Type</th>
                    <th style="width: 20%;">Action</th>
                </tr>
            </thead>
            <tbody>
                @if (productionFiles?.Any() == true)
                {
                    foreach (var file in productionFiles)
                    {
                        <tr>
                            <td>@file.Name</td>
                            <td>@file.Catagory</td>
                            <td>@file.ContentType</td>
                            <td>
                                <a class="text-purple" href="@Url.Action("ViewFile","UploadFile", new { Id = file.Id })" target="_blank">View <i class="fas fa-eye"></i></a> |
                                <a class="text-purple" href="@Url.Action("DownloadFile","UploadFile", new { Id = file.Id })" target="_blank">Download <i class="fas fa-download"></i></a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4" class="text-center">No documents available</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="stamp-fallback"></div>
</section>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script>
        document.getElementById('print-btn').addEventListener('click', () => window.print());

        document.getElementById('download-btn').addEventListener('click', async () => {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF('p', 'mm', 'a4');
            const pages = document.querySelectorAll('.pdf-page');

            for (let i = 0; i < pages.length; i++) {
                const canvas = await html2canvas(pages[i], {
                    scale: 2,
                    useCORS: true,
                    logging: false
                });
                const imgData = canvas.toDataURL('image/png');
                const imgWidth = doc.internal.pageSize.getWidth() - 30;
                const imgHeight = (canvas.height * imgWidth) / canvas.width;
                
                if (i > 0) doc.addPage();
                doc.addImage(imgData, 'PNG', 15, 15, imgWidth, imgHeight);
            }

            doc.save('PCE_Case_Report.pdf');
        });
    </script>
}