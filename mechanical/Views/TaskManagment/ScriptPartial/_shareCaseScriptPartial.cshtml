<script>
    
    function stripTime(date) {
        return new Date(Date.UTC(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate()));
    }

    $(document).ready(function () {

        // Deadline validation for Share Task form before submission
        
        var today = new Date().toISOString().split("T")[0];
        $("#shareDeadline").attr("min", today);
        
        $("#shareCaseForm input, #shareCaseForm select, #shareCaseForm textarea").on("input change", function () {
            var isValid = $("#shareCaseForm")[0].checkValidity();
            $("#shareCaseButton").prop("disabled", !isValid);
        });

        $('.select2').select2({ placeholder: "Select Relation Managers", allowClear: true });

        // Populate RMs dropdown (for Share Task form)
        $.get("/UserManagment/GetPeerRMs", function (data) {
            var rmDropdown = $("#SelectedRMs");
            rmDropdown.empty();
            $.each(data, function (index, item) {
                rmDropdown.append($('<option></option>').val(item.Id).text(item.Name));
            });
            rmDropdown.select2();
        });

        // Deadline validation for Share Task form before submission
        $("#shareCaseButton").click(function (e) {
            e.preventDefault();
            var form = $("#shareCaseForm")[0];

            // Validate form controls first
            if (!form.checkValidity()) {
                form.classList.add("was-validated");
                form.reportValidity();
                return;
            }

            // Validate deadline field (must be today or later)
            var deadlineInput = $("#shareDeadline");
            var deadline = stripTime(new Date(deadlineInput.val()));
            var today = stripTime(new Date());
            @* today.setHours(0, 0, 0, 0); *@

            if (deadline < today)  {
            var errorMessage = "Deadline cannot be earlier than today.";

                // Show error message in Toastr
                toastr.error(errorMessage, "Validation Error");

                // Show inline validation message
                deadlineInput.addClass("is-invalid");
                deadlineInput.siblings(".invalid-feedback").text(errorMessage).show();

                return;
            } else {
                deadlineInput.removeClass("is-invalid");
                deadlineInput.siblings(".invalid-feedback").hide();
            }

            var formData = $("#shareCaseForm").serialize();

            // Disable submit button and show spinner
            $("#shareCaseButton").prop("disabled", true);
            $("#shareSpinner").removeClass("d-none");
            
            $.ajax({
                url: '/TaskManagment/ShareTasks',
                type: 'POST',
                data: formData,
                headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
                success: function (response) {
                    if (response.success) {
                        toastr.success(response.message, "Success");
                        form.reset();
                        form.classList.remove("was-validated");
                        $("#shareCaseModal").modal("hide");
                        $('.select2').val(null).trigger('change');
                    } else {
                        toastr.error(response.message, "Error occurred when sharing Task");
                    }
                },
                error: function (xhr) {
                    $("#shareCaseButton").prop("disabled", false);
                    $("#shareSpinner").addClass("d-none");

                    if (xhr.responseJSON && xhr.responseJSON.errors) {
                        let errors = xhr.responseJSON.errors;
                        $(".invalid-feedback").hide();
                        $(".is-invalid").removeClass("is-invalid");

                        for (let field in errors) {
                            let errorMessage = errors[field][0];
                            let inputField = $(`[asp-for="${field}"], #${field}`);

                            if (inputField.length) {
                                inputField.addClass("is-invalid");
                                inputField.siblings(".invalid-feedback").text(errorMessage).show();
                            }
                        }
                    } else {
                        toastr.error("An error occurred while submitting the form.", "Error");
                    }
                },
                complete: function () {
                    $("#shareCaseButton").prop("disabled", false);
                    $("#shareSpinner").addClass("d-none");
                }
            });
        });
    });
</script>
