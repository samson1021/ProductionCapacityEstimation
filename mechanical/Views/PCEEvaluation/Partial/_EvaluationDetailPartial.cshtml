@using mechanical.Models.Dto.UploadFileDto
@using mechanical.Models.PCE.Dto.PCEEvaluationDto
@using mechanical.Models.PCE.Dto.ProductionCapacityDto;
@model mechanical.Models.PCE.Dto.PCEEvaluationDto.PCEEvaluationReturnDto
@{
    var latestEvaluation = ViewData["LatestEvaluation"] as PCEEvaluationReturnDto;
}



<!-- Capacity Information -->
<div class="col-md-12">
    <div class="border my-2 p-4 position-relative shadow mt-4" style="border-color: darkgray !important;border-radius:2px">
        <div class="bg-white px-3 position-absolute top-0 start-50 translate-middle"><h5>Capacity Information </h5></div>
            <dl class="row">
                <dt class="col-sm-3">Machine Name</dt>
            <dd class="col-sm-3"><p>@latestEvaluation.PCE.MachineName</p></dd>

            <dt class="col-sm-3">Country of Origin</dt>
                <dd class="col-sm-3"><p>@latestEvaluation.PCE.CountryOfOrgin</p></dd>

                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.MachineFunctionalityStatus)</dt>
            <dd class="col-sm-3"><h6>@Html.DisplayFor(model => model.MachineFunctionalityStatus)</h6></dd>

                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.ActualProductionCapacity)</dt>
                <dd class="col-sm-3"><h6>@Html.DisplayFor(model => model.ActualProductionCapacity)</h6></dd>

                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.DesignProductionCapacity)</dt>
                <dd class="col-sm-3"><h6>@Html.DisplayFor(model => model.DesignProductionCapacity)</h6></dd>

                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.AttainableProductionCapacity)</dt>
                <dd class="col-sm-3"><h6>@Html.DisplayFor(model => model.AttainableProductionCapacity)</h6></dd>

                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.BottleneckProductionLineCapacity)</dt>
            <dd class="col-sm-3"><h6>@Html.DisplayFor(model => model.BottleneckProductionLineCapacity)</h6></dd>

                <dt class="col-sm-3">@Html.DisplayNameFor(model => model.ProductionMeasurement)</dt>
                <dd class="col-sm-3"><h6>@Html.DisplayFor(model => model.ProductionMeasurement)</h6></dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.TechnicalObsolescenceStatus)</dt>
            <dd class="col-sm-3"><h6>@Html.DisplayFor(model => model.TechnicalObsolescenceStatus)</h6></dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.FactorsAffectingProductionCapacity)</dt>
            <dd class="col-sm-3"><h6>@Html.DisplayFor(model => model.SurveyRemark)</h6></dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.ProductionMeasurement)</dt>
            <dd class="col-sm-3"><h6>@Html.DisplayFor(model => model.ProductionMeasurement)</h6></dd>
            </dl>
        </div>
    </div>

    <!-- Additional Information -->
    <div class="card bg-light">
        <div class="card-header text-white">
            <h3 class="card-title">Additional Information</h3>
        </div>
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-6">@Html.DisplayNameFor(model => model.TechnicalObsolescenceStatus)</dt>
                <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.TechnicalObsolescenceStatus)</h6></dd>

                <dt class="col-sm-6">@Html.DisplayNameFor(model => model.DepreciationRateApplied)</dt>
                <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.DepreciationRateApplied)</h6></dd>

                <dt class="col-sm-6">@Html.DisplayNameFor(model => model.FactorsAffectingProductionCapacity)</dt>
                <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.FactorsAffectingProductionCapacity)</h6></dd>

                <dt class="col-sm-6">@Html.DisplayNameFor(model => model.Discrepancies)</dt>
                <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.Discrepancies)</h6></dd>

                <dt class="col-sm-6">@Html.DisplayNameFor(model => model.MachineFunctionalityStatus)</dt>
                <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.MachineFunctionalityStatus)</h6></dd>

                <dt class="col-sm-6">@Html.DisplayNameFor(model => model.MachineNonFunctionalityReason)</dt>
                <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.MachineNonFunctionalityReason)</h6></dd>

                <dt class="col-sm-6">@Html.DisplayNameFor(model => model.OtherMachineNonFunctionalityReason)</dt>
                <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.OtherMachineNonFunctionalityReason)</h6></dd>
            </dl>
        </div>
    </div>
</div>

<!-- General Information -->
<div class="col-md-6">
    <div class="card bg-light">
        <div class="card-header text-white">
            <h3 class="card-title">General Information</h3>
        </div>
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-6">@Html.DisplayNameFor(model => model.ProductionLineOrEquipmentName)</dt>
                <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.ProductionLineOrEquipmentName)</h6></dd>

                <dt class="col-sm-6">@Html.DisplayNameFor(model => model.OutputType)</dt>
                <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.OutputType)</h6></dd>

                <dt class="col-sm-6">@Html.DisplayNameFor(model => model.OutputPhase)</dt>
                <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.OutputPhase)</h6></dd>

                <dt class="col-sm-6">@Html.DisplayNameFor(model => model.WorkingDaysPerMonth)</dt>
                <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.WorkingDaysPerMonth)</h6></dd>

                <dt class="col-sm-6">@Html.DisplayNameFor(model => model.EffectiveProductionHourType)</dt>
                <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.EffectiveProductionHourType)</h6></dd>

                <dt class="col-sm-6">@Html.DisplayNameFor(model => model.EffectiveProductionHour)</dt>
                <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.EffectiveProductionHour)</h6></dd>

                <dt class="col-sm-6">@Html.DisplayNameFor(model => model.ShiftsPerDay)</dt>
                <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.ShiftsPerDay)</h6></dd>
            </dl>
        </div>
    </div>
    <div class="card bg-light mt-4">
        <div class="card-header text-white">
            <h3 class="card-title">Shift Hours</h3>
        </div>
        <div class="card-body">
            @if (Model.ShiftHours != null && Model.ShiftHours.Any())
            {
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Start Time</th>
                            <th>End Time</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var shift in Model.ShiftHours)
                        {
                            
                            var startTime = new DateTime(1, 1, 1, shift.Start.Hours, shift.Start.Minutes, shift.Start.Seconds);
                            var endTime = new DateTime(1, 1, 1, shift.End.Hours, shift.End.Minutes, shift.End.Seconds);
                        
                            <tr>
                                <td>@startTime.ToString("hh:mm tt")</td>
                                <td>@endTime.ToString("hh:mm tt")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>No shift hours available.</p>
            }
        </div>
    </div>
    
    <!-- Inspection Information -->
    <div class="card bg-light">
        <div class="card-header text-white">
            <h3 class="card-title">Inspection Information</h3>
        </div>
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-6">Inspection Started At</dt>
                <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.TimeConsumedToCheck.Start, new { @class = "datetime-format" })</h6></dd>

                <dt class="col-sm-6">Inspection Ended At</dt>
                <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.TimeConsumedToCheck.End, new { @class = "datetime-format" })</h6></dd>

                <dt class="col-sm-6">@Html.DisplayNameFor(model => model.InspectionPlace)</dt>
                <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.InspectionPlace)</h6></dd>

                <dt class="col-sm-6">@Html.DisplayNameFor(model => model.InspectionDate)</dt>
                <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.InspectionDate)</h6></dd>
            </dl>
        </div>
    </div>
</div>



<div class="card bg-light">
    <div class="card-header text-white">
        <h3 class="card-title">Supporting Documents</h3>
    </div>
    <div class="card-body">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>File Name</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @{
                    if (Model.SupportingEvidences == null || !Model.SupportingEvidences.Any())
                    {
                        <tr>
                            <td colspan="2">No Supporting Evidence related to this PCE Evaluation</td>
                        </tr>
                    }
                    else
                    {
                        foreach (var file in Model.SupportingEvidences)
                        {
                            <tr>
                                <td>@file.Name</td>
                                <td>
                                    <a href="@Url.Action("ViewFile", "UploadFile", new { id = file.Id })" target="_blank">View <i class="fas fa-eye"></i></a> |
                                    <a href="@Url.Action("DownloadFile", "UploadFile", new { id = file.Id })">Download <i class="fas fa-download"></i></a>
                                </td>
                            </tr>
                        }
                    }
                }
            </tbody>
        </table>
    </div>
</div>
<div class="card bg-light">
    <div class="card-header text-white">
        <h3 class="card-title">Production Process Flow Diagrams</h3>
    </div>
    <div class="card-body">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>File Name</th>
                    <th>Actions</th>
                </tr>
            </thead>                         
            <tbody>
            
                @{
                    if (Model.ProductionProcessFlowDiagrams == null || !Model.ProductionProcessFlowDiagrams.Any())
                    {
                        <tr>
                            <td colspan="2">No Production Process Flow Diagram related to this PCE Evaluation</td>
                        </tr>
                    }
                    else
                    {
                        foreach (var file in Model.ProductionProcessFlowDiagrams)
                        {
                            <tr>
                                <td>@file.Name</td>
                                <td>
                                    <a href="@Url.Action("ViewFile", "UploadFile", new { id = file.Id })" target="_blank">View <i class="fas fa-eye"></i></a> |
                                    <a href="@Url.Action("DownloadFile", "UploadFile", new { id = file.Id })">Download <i class="fas fa-download"></i></a>
                                </td>
                            </tr>
                        }
                    }
                }
            </tbody>
        </table>
    </div>
</div>

<style>
    .card-title {
        font-size: 1.25rem;
        font-weight: bold; 
        color: #080808; 
        text-align: center; 
        margin: 0; 
        padding: 10px;
    }
    .card {
        border: 1px solid #dee2e6;
        border-radius: 0.25rem; 
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); 
    }
    .card-header {
        background-color: #f8f9fa; 
        border-bottom: 1px solid #dee2e6; 
    }
    .card-body {
        padding: 20px;
    }
    .center {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%; 
    }
</style>