@using mechanical.Models.Dto.UploadFileDto
@using mechanical.Models.PCE.Enum.PCEEvaluation
@using mechanical.Models.PCE.Dto.PCEEvaluationDto
@using mechanical.Models.PCE.Dto.ProductionCapacityDto

@model mechanical.Models.PCE.Dto.PCEEvaluationDto.PCEEvaluationReturnDto
@{
    var latestEvaluation = ViewData["LatestEvaluation"] as PCEEvaluationReturnDto;
}

<div class="row">
    <!-- Machine Information Section -->
    <div class="col-md-12">
        <div class="card mb-1 g-1 shadow-sm">
            <div class="card-header">
                <h3 class="card-title mb-0"><i class="fas fa-cogs me-2"></i>Machine Information</h3>
                @* <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div> *@
            </div>
            <div class="card-body">
                <div class="row">
                    <!-- Basic Details -->
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-4 text-muted">Machine Name</dt>
                            <dd class="col-sm-8 font-weight-bold">@(string.IsNullOrEmpty(Model.MachineName) ? "N/A" : Model.MachineName)</dd>
                            
                            <dt class="col-sm-4 text-muted">Country of Origin</dt>
                            <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.CountryOfOrigin) ? "N/A" : Model.CountryOfOrigin)</dd>
                            
                            <dt class="col-sm-4 text-muted">Production Line Type</dt>
                            <dd class="col-sm-8 font-weight-bold">@(Model.ProductionLineType == null ? "N/A" : Model.ProductionLineType)</dd>
                            
                            @if (Model.BottleneckProductionLine != null)
                            {
                                <dt class="col-sm-4 text-muted">Bottleneck Production Line</dt>
                                <dd class="col-sm-8 font-weight-bold">@Model.BottleneckProductionLine.LineName</dd>

                                <dt class="col-sm-4 text-muted">Bottleneck Capacity</dt>
                                <dd class="col-sm-8 font-weight-bold">@Model.BottleneckProductionLine.Capacity @Model.BottleneckProductionLine.Unit</dd>
                            }

                            <dt class="col-sm-4 text-muted">Technical Status</dt>
                            <dd class="col-sm-8">
                                @if (!string.IsNullOrEmpty(Model.TechnicalObsolescenceStatus))
                                {
                                    <span class="badge @(Model.TechnicalObsolescenceStatus == "Current" ? "bg-success" : 
                                        Model.TechnicalObsolescenceStatus == "ObsoleteSoon" ? "bg-warning" : "bg-danger")">
                                        @Model.TechnicalObsolescenceStatus</span>
                                }
                                else
                                {
                                    <span>N/A</span>
                                }
                            </dd>

                            <dt class="col-sm-4 text-muted">Functionality</dt>
                            <dd class="col-sm-8">
                                @if (Model.MachineFunctionalityStatus != null)
                                {
                                    <span class="badge @(Model.MachineFunctionalityStatus == MachineFunctionalityStatus.Functional ? "bg-success" : "bg-danger")">
                                        @Model.MachineFunctionalityStatus
                                    </span>
                                }
                                else
                                {
                                    <span>N/A</span>
                                }
                            </dd>
                        </dl>
                        
                        @if (Model.MachineFunctionalityStatus == MachineFunctionalityStatus.NonFunctional)
                        {
                            <div class="alert alert-warning mb-0">
                                <h5><i class="fas fa-exclamation-triangle me-2"></i>Non-Functional Details</h5>
                                <div>
                                    <strong>Reason:</strong>
                                    <span>
                                        @(Model.MachineNonFunctionalityReason.HasValue ? Model.MachineNonFunctionalityReason.Value.ToString() : "N/A")
                                    </span>
                                    @if (Model.MachineNonFunctionalityReason == MachineNonFunctionalityReason.Other && !string.IsNullOrEmpty(Model.OtherMachineNonFunctionalityReason))
                                    {
                                        <div>
                                            <strong>Details:</strong> @Model.OtherMachineNonFunctionalityReason
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-4 text-muted">Machine Name</dt>
                            <dd class="col-sm-8 font-weight-bold">@(string.IsNullOrEmpty(Model.MachineName) ? "N/A" : Model.MachineName)</dd>
                            
                            <dt class="col-sm-4 text-muted">Country of Origin</dt>
                            <dd class="col-sm-8">@(string.IsNullOrEmpty(Model.CountryOfOrigin) ? "N/A" : Model.CountryOfOrigin)</dd>
                            
                            <dt class="col-sm-4 text-muted">Production Line Type</dt>
                            <dd class="col-sm-8 font-weight-bold">@(Model.ProductionLineType == null ? "N/A" : Model.ProductionLineType)</dd>
                            
                            @if (@Model.BottleneckProductionLine != null)
                            {
                                <dt class="col-sm-4 text-muted">Bottleneck Production Line</dt>
                                <dd class="col-sm-8 font-weight-bold">@Model.BottleneckProductionLine.LineName</dd>

                                <dt class="col-sm-4 text-muted">Bottleneck Capacity</dt>
                                <dd class="col-sm-8 font-weight-bold">@Model.BottleneckProductionLine.Capacity @Model.BottleneckProductionLine.Unit</dd>
                            }

                            @if (@Model.TotalCapacity != null)
                            {
                                <dt class="col-sm-4 text-muted">Total Current Capacity</dt>
                                <dd class="col-sm-8 font-weight-bold">@(Model.TotalCapacity == null ? "N/A" : Model.TotalCapacity)</dd>
                            }

                            <dt class="col-sm-4 text-muted">Technical Status</dt>
                            <dd class="col-sm-8">
                                @if (!string.IsNullOrEmpty(Model.TechnicalObsolescenceStatus))
                                {
                                    <span class="badge @(Model.TechnicalObsolescenceStatus == "Current" ? "bg-success" : 
                                        Model.TechnicalObsolescenceStatus == "ObsoleteSoon" ? "bg-warning" : "bg-danger")">
                                        @Model.TechnicalObsolescenceStatus</span>
                                }
                                else
                                {
                                    <span>N/A</span>
                                }
                            </dd>

                            <dt class="col-sm-4 text-muted">Functionality</dt>
                            <dd class="col-sm-8">
                                @if (Model.MachineFunctionalityStatus != null)
                                {
                                    <span class="badge @(Model.MachineFunctionalityStatus == MachineFunctionalityStatus.Functional ? "bg-success" : "bg-danger")">
                                        @Model.MachineFunctionalityStatus
                                    </span>
                                }
                                else
                                {
                                    <span>N/A</span>
                                }
                            </dd>
                        </dl>
                        
                        @if (Model.MachineFunctionalityStatus == MachineFunctionalityStatus.NonFunctional)
                        {
                            <div class="alert alert-warning mb-0">
                                <h5><i class="fas fa-exclamation-triangle me-2"></i>Non-Functional Details</h5>
                                <div>
                                    <strong>Reason:</strong>
                                    <span>
                                        @(Model.MachineNonFunctionalityReason.HasValue ? Model.MachineNonFunctionalityReason.Value.ToString() : "N/A")
                                    </span>
                                    @if (Model.MachineNonFunctionalityReason == MachineNonFunctionalityReason.Other && !string.IsNullOrEmpty(Model.OtherMachineNonFunctionalityReason))
                                    {
                                        <div>
                                            <strong>Details:</strong> @Model.OtherMachineNonFunctionalityReason
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

        <!-- Input-Output Data Status -->
        
    @if (!Model.HasInputOutputData)
    {
        <div class="col-md-12">
            <div class="card mb-4 shadow-sm">
                <div class="card-header">
                    <h3 class="card-title mb-0"><i class="fas fa-database me-2"></i>Input-Output Data Collection Status</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <div class="alert alert-warning">
                        <h5>
                            <i class="fas fa-exclamation-circle me-2"></i>
                            No input-output data was collected during site visit
                        </h5>
                        
                        @if (Model.Justifications != null && Model.Justifications.Any())
                        {
                            <div class="mt-3">
                                <h6><i class="fas fa-comment-dots me-2"></i>Justifications:</h6>
                                <ul class="list-group list-group-flush">
                                    @foreach (var justification in Model.Justifications)
                                    {
                                        <li class="list-group-item bg-transparent">
                                            <div class="d-flex justify-content-between align-items-start">
                                                <div>
                                                    <strong>@justification.Reason.ToString():</strong> @justification.JustificationText
                                                </div>
                                                <span class="badge bg-secondary ms-2">@justification.Reason</span>
                                            </div>
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Production Lines Section -->
    <div class="col-md-12">
        <div class="card mb-2 shadow-sm">
            <div class="card-header">
                <h3 class="card-title mb-0"><i class="fas fa-list-ul me-2"></i>Production Lines</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="card-body p-0">
                @if (Model.ProductionLines != null && Model.ProductionLines.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover mb-0">
                            <thead class="bg-light">
                                <tr>
                                    <th>No</th>
                                    <th>Line/Equipment</th>
                                    <th>Output Type</th>
                                    <th>Output Phase</th>
                                    <th>Actual Capacity</th>
                                    <th>Design Capacity</th>
                                    <th>Attainable Capacity</th>
                                    <th>Unit</th>
                                    <th>Measurement</th>
                                    <th>Details</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{ var index = 0; }
                                @foreach (var line in Model.ProductionLines)
                                {
                                    <tr>
                                        <td>@index</td>
                                        <td>@(string.IsNullOrEmpty(line.LineName) ? "N/A" : line.LineName)</td>
                                        <td>@(string.IsNullOrEmpty(line.OutputType) ? "N/A" : line.OutputType)</td>
                                        <td>@(line.OutputPhase  == null ? "N/A" : line.OutputPhase)</td>
                                        <td>@(line.ActualCapacity == null ? "N/A" : line.ActualCapacity)</td>
                                        <td>@(line.DesignCapacity == null ? "N/A" : line.DesignCapacity)</td>
                                        <td>@(line.AttainableCapacity == null ? "N/A" : line.AttainableCapacity)</td>
                                        <td>@(line.ProductionUnit == null ? "N/A" : line.ProductionUnit)</td>
                                        <td>@(line.ProductionMeasurement == null ? "N/A" : line.ProductionMeasurement)</td>
                                        <td>
                                            @if (line.ProductionLineInputs != null && line.ProductionLineInputs.Any())
                                            {
                                                <button class="btn btn-sm btn-outline-primary toggle-details" 
                                                        data-target="#details-@line.Id" 
                                                        data-toggle="collapse"
                                                        aria-expanded="false"
                                                        aria-controls="details-@line.Id">
                                                    <i class="fas fa-chevron-right"></i> Details
                                                </button>
                                            }
                                            else
                                            {
                                                <span class="btn btn-sm btn-outline-secondary disabled">
                                                    <i class="fas fa-minus"></i> No input details
                                                </span>
                                            }
                                        </td>
                                    </tr>
                                    <tr class="collapse" id="details-@line.Id">
                                        <td colspan="10" class="p-2" style="grid-column: 2 / span 7;">
                                            <div class="p-1 border-top">
                                                <div class="row">
                                                    <div class="col-md-7">
                                                        @if (line.ProductionLineInputs != null && line.ProductionLineInputs.Any())
                                                        {
                                                            <div>
                                                                <button class="btn btn-sm btn-outline-secondary toggle-inputs mb-2" 
                                                                        data-target="#inputs-@line.Id" 
                                                                        data-toggle="collapse"
                                                                        aria-expanded="false"
                                                                        aria-controls="inputs-@line.Id"
                                                                        onclick="$(this).find('span').text($(this).find('span').text() === 'Show Inputs (@line.ProductionLineInputs.Count())' ? 'Hide Inputs' : 'Show Inputs (@line.ProductionLineInputs.Count())')">
                                                                    <i class="fas fa-boxes me-1"></i> <span>Show Inputs (@line.ProductionLineInputs.Count())</span>
                                                                </button>
                                                                
                                                                <div class="collapse" id="inputs-@line.Id">
                                                                    <div class="card card-body shadow-sm">
                                                                        <h5><i class="fas fa-box-open me-2 text-primary"></i>Production Inputs</h5>
                                                                        <div class="table-responsive">
                                                                            <table class="table table-sm table-hover">
                                                                                <thead class="bg-light">
                                                                                    <tr>
                                                                                        <th>Type</th>
                                                                                        <th>Quantity</th>
                                                                                        <th>Unit</th>
                                                                                    </tr>
                                                                                </thead>
                                                                                <tbody>
                                                                                    @foreach (var input in line.ProductionLineInputs)
                                                                                    {
                                                                                        <tr>
                                                                                            <td>@(string.IsNullOrEmpty(input.Type) ? "N/A" : input.Type)</td>
                                                                                            <td>@(input.Quantity == null ? "N/A" : input.Quantity)</td>
                                                                                            <td>@(input.Unit == null ? "N/A" : input.Unit)</td>
                                                                                        </tr>
                                                                                    }
                                                                                </tbody>
                                                                            </table>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                    </div>
                                                    <div class="col-md-5">
                                                        <h5 class="mb-2" style="margin-left: 1rem;"><i class="fas fa-calculator me-2 text-primary"></i>Calculations</h5>
                                                        <dl class="row" style="margin-left: 1rem;">
                                                            <dt class="col-sm-4 text-muted">Total Input</dt>
                                                            <dd class="col-sm-8">@(line.TotalInput == null ? "N/A" : line.TotalInput)</dd>
                                                            
                                                            <dt class="col-sm-4 text-muted">Conversion Rate</dt>
                                                            <dd class="col-sm-8">@(line.ConversionRatio != null ? line.ConversionRatio + "%" : "N/A")</dd>
                                                        </dl>
                                                    </div>
                                                </div>
                                            </div>
                                        </td>
                                    </tr>
                                    index = index + 1;
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="alert alert-info m-3">
                        <i class="fas fa-info-circle me-2"></i>
                        No production lines recorded
                        @if (!Model.HasInputOutputData)
                        {
                            <div class="mt-2">
                                <small class="text-muted">(Input-output data was not collected during site visit)</small>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Inspection Details -->
    <div class="col-md-12">
        <div class="card mb-2 mt-1 shadow-sm">
            <div class="card-header">
                <h3 class="card-title mb-0"><i class="fas fa-clipboard-check me-2"></i>Inspection Details</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-7">
                        <dl class="mb-4">
                            <dt class="text-muted small">Factors Affecting Capacity</dt>
                            <dd class="font-weight-bold">@(!string.IsNullOrEmpty(Model.FactorsAffectingProductionCapacity) ? Model.FactorsAffectingProductionCapacity : "N/A")</dd>
                        </dl>
                        
                        <dl class="mb-4">
                            <dt class="text-muted small">Survey Remarks</dt>
                            <dd class="font-weight-bold">@(!string.IsNullOrEmpty(Model.SurveyRemark) ? Model.SurveyRemark : "N/A")</dd>
                        </dl>
                    </div>
                    <div class="col-md-5">
                        <dl class="mb-4">
                            <dt class="text-muted small">Inspection Duration</dt>
                            <dd class="font-weight-bold">
                                @if (Model.TimeConsumedToCheck != null && 
                                    Model.TimeConsumedToCheck.Start.TimeOfDay != TimeSpan.Zero && 
                                    Model.TimeConsumedToCheck.End.TimeOfDay != TimeSpan.Zero)
                                {
                                    <span>
                                        <i class="far fa-clock text-info me-2"></i>
                                        @Model.TimeConsumedToCheck.Start.ToString(@"hh\:mm") - @Model.TimeConsumedToCheck.End.ToString(@"hh\:mm")
                                        <span class="badge bg-light text-dark ms-2">(@(@Model.TimeConsumedToCheck.Duration.ToString(@"hh\:mm")))</span>
                                    </span>
                                }
                                else
                                {
                                    <span>N/A</span>
                                }
                            </dd>
                        </dl>
                        
                        <dl class="mb-4">
                            <dt class="text-muted small">Inspection Date</dt>
                            <dd class="font-weight-bold">
                                <i class="far fa-calendar text-info me-2"></i>
                                @(Model.InspectionDate != default(DateOnly) ? Model.InspectionDate.ToString("d") : "N/A")
                            </dd>
                        </dl>
                        
                        <dl class="mb-4">
                            <dt class="text-muted small">Inspection Place</dt>
                            <dd class="font-weight-bold">
                                <i class="far fa-map text-info me-2"></i>
                                @(!string.IsNullOrEmpty(Model.InspectionPlace) ? Model.InspectionPlace : "N/A")
                            </dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Attachments Section -->
    <div class="col-md-12">
        <div class="card mb-4 shadow-sm">
            <div class="card-header">
                <h3 class="card-title mb-0"><i class="fas fa-paperclip me-2"></i>Attachments</h3>
                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>
            </div>

            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="bg-light">
                            <tr>
                                <th>File Name</th>
                                <th>Category</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (!Model.UploadedFiles.Any())
                            {
                                <tr>
                                    <td> <div class="alert alert-info">No documents related to this PCE Evaluation</div></td>
                                </tr>
                            }
                            else
                            {
                                foreach (var file in Model.UploadedFiles)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <i class="fas @(file.Catagory == "Image" ? "fa-image" : file.Catagory == "Document" ? "fa-file-alt" : "fa-file") me-2 text-primary"></i>
                                                <span class="text-truncate" title="@file.Name">@file.Name</span>
                                            </div>
                                        </td>
                                        <td>@file.Catagory</td>
                                        <td class="text-end">
                                            <a href="@Url.Action("ViewFile", "UploadFile", new { id = file.Id })" 
                                                class="btn btn-sm btn-outline-primary me-2">
                                                <i class="fas fa-eye"></i> View
                                            </a>
                                            <a href="@Url.Action("DownloadFile", "UploadFile", new { id = file.Id })" 
                                                class="btn btn-sm btn-outline-success">
                                                <i class="fas fa-download"></i> Download
                                            </a>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .document-card {
        transition: transform 0.2s ease-in-out;
    }
    .document-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    .text-truncate {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        display: block;
        max-width: 36rem;
    }
    .toggle-details, .toggle-inputs {
        transition: all 0.3s ease;
    }
    .toggle-details.collapsed i, .toggle-inputs.collapsed i {
        transform: rotate(-90deg);
    }
    .card-header {
        border-radius: 0.25rem 0.25rem 0 0 !important;
    }
    .badge {
        font-size: 0.8rem;
        padding: 0.35em 0.65em;
    }
    .progress-xs {
        height: 8px;
    }
    .list-group-item {
        border-left: 0;
        border-right: 0;
    }
    .list-group-item:first-child {
        border-top: 0;
    }
    .list-group-item:last-child {
        border-bottom: 0;
    }
</style>