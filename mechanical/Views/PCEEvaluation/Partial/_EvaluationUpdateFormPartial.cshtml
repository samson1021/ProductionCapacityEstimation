@using mechanical.Models.Dto.UploadFileDto
@using mechanical.Models.PCE.Enum.PCEEvaluation
@using mechanical.Models.PCE.Dto.PCEEvaluationDto
@using mechanical.Models.PCE.Dto.ProductionCapacityDto

@model mechanical.Models.PCE.Dto.PCEEvaluationDto.PCEEvaluationUpdateDto
@{
    var myPCE = ViewData["PCE"] as ReturnProductionDto;
}

<!-- General Information -->
<div class="border my-2 p-2 position-relative shadow mt-4" style="border-color: darkgray !important;border-radius:1px">
    <div class="bg-white px-2 position-absolute top-0 start-50 translate-middle"><h6>General Information </h6></div>
    <div class="row mt-3">
        <div class="form-group col-lg-3">
            <label>Machine/Plant Name</label>
            <input id="MachineOrPlantName" type="text" type="text" class="form-control form-control-sm" value="@(myPCE.MachineName?? myPCE.PlantName)" readonly required>
        </div>
        <div class="form-group col-lg-3">
            <label>Country of Origin</label>
            <input id="OriginCountry" type="text" class="form-control form-control-sm" value="@(myPCE.CountryOfOrgin ?? "Unknown country")" readonly required />
        </div>
        <div class="form-group col-lg-3">
            <label>@Html.DisplayNameFor(model => model.OutputType) <i class="text-danger">*</i></label>
            <input asp-for="OutputType" class="form-control form-control-sm" required />
            <span asp-validation-for="OutputType" class="text-danger" id="OutputType-error"></span>
        </div>
        <div class="form-group col-lg-3">
            <label>@Html.DisplayNameFor(model => model.ProductionLineOrEquipmentName) <i class="text-danger">*</i></label>
            <input asp-for="ProductionLineOrEquipmentName" class="form-control form-control-sm" required />
            <span asp-validation-for="ProductionLineOrEquipmentName" class="text-danger" id="ProductionLineOrEquipmentName-error"></span>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-lg-4">
            <label>@Html.DisplayNameFor(model => model.OutputPhase) <i class="text-danger">*</i></label>
            <select asp-for="OutputPhase" class="form-control form-control-sm" asp-items="Html.GetEnumSelectList<OutputPhase>()"></select>
            <span asp-validation-for="OutputPhase" class="text-danger" id="OutputPhase-error"></span>
        </div>
        <div class="form-group col-lg-4">
            <label>@Html.DisplayNameFor(model => model.EffectiveProductionHour)</label>
            <input asp-for="EffectiveProductionHour" class="form-control form-control-sm" type="number" step="0.01" />
            <span asp-validation-for="EffectiveProductionHour" class="text-danger"></span>
        </div>
        <div class="form-group col-lg-4">
            <label>@Html.DisplayNameFor(model => model.EffectiveProductionHourType)</label>
            <select asp-for="EffectiveProductionHourType" class="form-control form-control-sm" asp-items="Html.GetEnumSelectList<ProductionHourType>()"></select>
            <span asp-validation-for="EffectiveProductionHourType" class="text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-lg-4">
            <label>@Html.DisplayNameFor(model => model.WorkingDaysPerMonth)</label>
            <input asp-for="WorkingDaysPerMonth" class="form-control form-control-sm" type="number" min="1" />
            <span asp-validation-for="WorkingDaysPerMonth" class="text-danger"></span>
        </div>
        <div class="form-group col-sm-2">
            <label>@Html.DisplayNameFor(model => model.ShiftsPerDay)</label>
            <input asp-for="ShiftsPerDay" id="ShiftsPerDay" class="form-control form-control-sm" type="number" min="1" max="5" />
            <span asp-validation-for="ShiftsPerDay" class="text-danger"></span>
        </div>
        <div class="form-group col-sm-6" id="shiftHoursContainer">
            @for (int i = 0; i < Model.ShiftHours.Count; i++)
            {
                <div class="row shift-hour col-sm-12" data-index="@i">
                    <div class="form-group col-sm-6">
                        <label>Shift @i Start <i class="text-danger">*</i></label>
                        <input name="ShiftHours[@i].Start" class="form-control form-control-sm" type="time" value="@Model.ShiftHours[i].Start.ToString("hh\\:mm")" />
                        <span asp-validation-for="ShiftHours[i].Start" class="text-danger"></span>
                    </div>
                    <div class="form-group col-sm-6">
                        <label>Shift @i End <i class="text-danger">*</i></label>
                        <input name="ShiftHours[@i].End" class="form-control form-control-sm" type="time" value="@Model.ShiftHours[i].End.ToString("hh\\:mm")" />
                        <span asp-validation-for="ShiftHours[i].End" class="text-danger"></span>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Capacity Information -->
<div class="border my-2 p-2 position-relative shadow mt-4" style="border-color: darkgray !important;border-radius:1px">
    <div class="bg-white px-2 position-absolute top-0 start-50 translate-middle"><h6>Capacity Information </h6></div>
    <div class="row mt-3">
        <div class="form-group col-lg-4">
            <label>@Html.DisplayNameFor(model => model.ActualProductionCapacity) <i class="text-danger">*</i></label>
            <input asp-for="ActualProductionCapacity" class="form-control form-control-sm" required />
            <span asp-validation-for="ActualProductionCapacity" class="text-danger"></span>
        </div>
        <div class="form-group col-lg-4">
            <label>@Html.DisplayNameFor(model => model.DesignProductionCapacity)</label>
            <input asp-for="DesignProductionCapacity" class="form-control form-control-sm" />
            <span asp-validation-for="DesignProductionCapacity" class="text-danger"></span>
        </div>
        <div class="form-group col-lg-4">
            <label>@Html.DisplayNameFor(model => model.AttainableProductionCapacity)</label>
            <input asp-for="AttainableProductionCapacity" class="form-control form-control-sm" />
            <span asp-validation-for="AttainableProductionCapacity" class="text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-lg-4">
            <label>@Html.DisplayNameFor(model => model.EstimatedProductionCapacity) <i class="text-danger">*</i></label>
            <input asp-for="EstimatedProductionCapacity" class="form-control form-control-sm" required />
            <span asp-validation-for="EstimatedProductionCapacity" class="text-danger"></span>
        </div>
        <div class="form-group col-lg-4">
            <label>@Html.DisplayNameFor(model => model.BottleneckProductionLineCapacity)</label>
            <input asp-for="BottleneckProductionLineCapacity" class="form-control form-control-sm" />
            <span asp-validation-for="BottleneckProductionLineCapacity" class="text-danger"></span>
        </div>
        <div class="form-group col-lg-4">
            <label>@Html.DisplayNameFor(model => model.OverallActualCurrentPlantCapacity) <i class="text-danger">*</i></label>
            <input asp-for="OverallActualCurrentPlantCapacity" class="form-control form-control-sm" required />
            <span asp-validation-for="OverallActualCurrentPlantCapacity" class="text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-lg-4">
            <label>@Html.DisplayNameFor(model => model.ProductionUnit) <i class="text-danger">*</i></label>
            <select asp-for="ProductionUnit" class="form-control form-control-sm" asp-items="Html.GetEnumSelectList<ProductionUnit>()"></select>
            <span asp-validation-for="ProductionUnit" class="text-danger"></span>
        </div>
        <div class="form-group col-lg-4">
            <label>@Html.DisplayNameFor(model => model.ProductionMeasurement) <i class="text-danger">*</i></label>
            <select asp-for="ProductionMeasurement" class="form-control form-control-sm" asp-items="Html.GetEnumSelectList<ProductionMeasurement>()"></select>
            <span asp-validation-for="ProductionMeasurement" class="text-danger"></span>
        </div>
        <div class="form-group col-lg-4">
            <label>@Html.DisplayNameFor(model => model.DepreciationRateApplied) <i class="text-danger">*</i></label>
            <input asp-for="DepreciationRateApplied" class="form-control form-control-sm" type="number" step="0.01" required />
            <span asp-validation-for="DepreciationRateApplied" class="text-danger"></span>
        </div>
    </div>
    <!-- Factors Affecting Production Capacity -->
    <div class="row">
        <div class="form-group col-lg-6">
            <label>@Html.DisplayNameFor(model => model.FactorsAffectingProductionCapacity) <i class="text-danger">*</i></label>
            <textarea asp-for="FactorsAffectingProductionCapacity" class="form-control form-control-sm" required></textarea>
            <span asp-validation-for="FactorsAffectingProductionCapacity" class="text-danger"></span>
        </div>
        <div class="form-group col-lg-6">
            <label>@Html.DisplayNameFor(model => model.Discrepancies)</label>
            <textarea asp-for="Discrepancies" class="form-control form-control-sm"></textarea>
            <span asp-validation-for="Discrepancies" class="text-danger"></span>
        </div>
    </div>
</div>

<!-- Inspection Information -->
<div class="border my-2 p-2 position-relative shadow mt-4" style="border-color: darkgray !important;border-radius:1px">
    <div class="bg-white px-2 position-absolute top-0 start-50 translate-middle"><h6>Inspection Information </h6></div>
    <div class="row mt-3">
        <div class="form-group col-lg-4">
            <label>@Html.DisplayNameFor(model => model.MachineFunctionalityStatus) <i class="text-danger">*</i></label>
            <select asp-for="MachineFunctionalityStatus" class="form-control form-control-sm" asp-items="Html.GetEnumSelectList<MachineFunctionalityStatus>()"></select>
            <span asp-validation-for="MachineFunctionalityStatus" class="text-danger"></span>
        </div>
        <div class="form-group col-lg-4" id="functionalityReasonRow" @(Model.MachineFunctionalityStatus == MachineFunctionalityStatus.NotFunctional ? "" : "style=\"display: none;\"")>
            <label>@Html.DisplayNameFor(model => model.MachineNonFunctionalityReason) <i class="text-danger">*</i></label>
            <select asp-for="MachineNonFunctionalityReason" class="form-control form-control-sm" asp-items="Html.GetEnumSelectList<MachineNonFunctionalityReason>()"></select>
            <span asp-validation-for="MachineNonFunctionalityReason" class="text-danger"></span>
        </div>
        <div class="form-group col-lg-4" id="otherReasonRow" @(Model.MachineNonFunctionalityReason == MachineNonFunctionalityReason.Other ? "" : "style=\"display: none;\"")>
            <label>@Html.DisplayNameFor(model => model.OtherMachineNonFunctionalityReason) <i class="text-danger">*</i></label>
            <textarea asp-for="OtherMachineNonFunctionalityReason" class="form-control form-control-sm"></textarea>
            <span asp-validation-for="OtherMachineNonFunctionalityReason" class="text-danger"></span>
        </div>
    </div>

    <div class="row mt-3">
        <div class="form-group col-lg-4">
            <label>@Html.DisplayNameFor(model => model.TechnicalObsolescenceStatus) <i class="text-danger">*</i></label>
            <input asp-for="TechnicalObsolescenceStatus" class="form-control form-control-sm" required />
            <span asp-validation-for="TechnicalObsolescenceStatus" class="text-danger"></span>
        </div>
        <div class="form-group col-lg-4">
            <label>Checking Started At <i class="text-danger">*</i></label>
            <input asp-for="TimeConsumedToCheck.Start" class="form-control form-control-sm" type="datetime-local" value="@Model.TimeConsumedToCheck.Start.ToString("yyyy-MM-ddTHH:mm:ss")" required />
            <span asp-validation-for="TimeConsumedToCheck.Start" class="text-danger"></span>
        </div>
        <div class="form-group col-lg-4">
            <label>Checking Ended At <i class="text-danger">*</i></label>
            <input asp-for="TimeConsumedToCheck.End" class="form-control form-control-sm" type="datetime-local" value="@Model.TimeConsumedToCheck.End.ToString("yyyy-MM-ddTHH:mm:ss")" required />
            <span asp-validation-for="TimeConsumedToCheck.End" class="text-danger"></span>
        </div>
    </div>
</div>

<!-- Update Documents -->

<div class="border my-2 p-2 position-relative shadow mt-4" style="border-color: darkgray !important;border-radius:1px">
    <div class="bg-white px-2 position-absolute top-0 start-50 translate-middle"><h6>Update Documents </h6></div>
    <div class="row">
        <div class="form-group col-xl-12">
            <label>Supporting Evidences <i class="text-danger">*</i></label>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th class="col-md-10">File Names</th>
                        <th class="col-md-2">Actions</th>
                    </tr>
                </thead>
                <tbody id="file-list1">
                    @if (Model.SupportingEvidences == null || !Model.SupportingEvidences.Any())
                    {
                        <tr id="no-evidence" class="text-center file-row" data-file-id="0">
                            <td colspan="2">
                                <h6>No supporting evidence</h6>
                            </td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var file in Model.SupportingEvidences)
                        {
                            <tr id="file-@file.Id" class="file-row" data-file-id="@file.Id">
                                <td>@file.Name</td>
                                <td>
                                    <a href="@Url.Action("ViewFile", "UploadFile", new { id = file.Id })" target="_blank">View <i class="fas fa-eye"></i></a> |
                                    <a href="#" data-file-id="@file.Id" onclick="deleteFile('@file.Id', event)" style="color: red;">Delete <i class="fas fa-trash"></i></a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
            <input asp-for="NewSupportingEvidences" type="file" class="form-control" multiple />
            <span asp-validation-for="NewSupportingEvidences" class="text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-xl-12">
            <label>Production Process Flow Diagrams <i class="text-danger">*</i></label>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th class="col-md-10">File Name</th>
                        <th class="col-md-2">Actions</th>
                    </tr>
                </thead>
                <tbody id="file-list2">
                    @if (Model.ProductionProcessFlowDiagrams == null || !Model.ProductionProcessFlowDiagrams.Any())
                    {
                        <tr id="no-diagram" class="text-center file-row" data-file-id="0">
                            <td colspan="2">
                                <h6>No production process flow diagram</h6>
                            </td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var file in Model.ProductionProcessFlowDiagrams)
                        {
                            <tr id="file-@file.Id" class="file-row" data-file-id="@file.Id">
                                <td>@file.Name</td>
                                <td>
                                    <a href="@Url.Action("ViewFile", "UploadFile", new { id = file.Id })" target="_blank">View <i class="fas fa-eye"></i></a> |
                                    <a href="#" data-file-id="@file.Id" onclick="deleteFile('@file.Id', event)" style="color: red;">Delete <i class="fas fa-trash"></i></a>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
            <input asp-for="NewProductionProcessFlowDiagrams" type="file" class="form-control" multiple />
            <span asp-validation-for="NewProductionProcessFlowDiagrams" class="text-danger"></span>
        </div>
    </div>
</div>

<!-- Additional Information -->
<div class="border my-2 p-2 position-relative shadow mt-4" style="border-color: darkgray !important;border-radius:1px">
    <div class="bg-white px-2 position-absolute top-0 start-50 translate-middle"><h6>Additional Information </h6></div>
    <div class="row mt-3">
        <div class="form-group col-lg-12">
            <label>@Html.DisplayNameFor(model => model.SurveyRemark)</label>
            <textarea asp-for="SurveyRemark" class="form-control form-control-sm"></textarea>
            <span asp-validation-for="SurveyRemark" class="text-danger"></span>
        </div>
    </div>

    <div class="row mt-3">

        <div class="form-group col-lg-6">
            <label>@Html.DisplayNameFor(model => model.InspectionPlace) <i class="text-danger">*</i></label>
            <input asp-for="InspectionPlace" class="form-control form-control-sm" required />
            <span asp-validation-for="InspectionPlace" class="text-danger"></span>
        </div>
        <div class="form-group col-lg-3"></div>
        <div class="form-group col-lg-3">
            <label>@Html.DisplayNameFor(model => model.InspectionDate) <i class="text-danger">*</i></label>
            <input asp-for="InspectionDate" class="form-control form-control-sm" type="date" value="@(Model.InspectionDate.ToString("yyyy-MM-dd"))" required />
            @Html.ValidationMessageFor(m => m.InspectionDate)
            <span asp-validation-for="InspectionDate" class="text-danger"></span>
        </div>
    </div>
</div>