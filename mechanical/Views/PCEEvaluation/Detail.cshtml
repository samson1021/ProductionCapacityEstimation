@using mechanical.Models.Dto.UploadFileDto
@using mechanical.Models.PCE.Dto.PCEEvaluationDto
@using mechanical.Models.PCE.Dto.ProductionCapacityDto
@model mechanical.Models.PCE.Dto.PCEEvaluationDto.PCEEvaluationReturnDto

@{
    ViewData["Title"] = ViewBag.Title as string;   
    var myPCE = ViewData["PCE"] as ReturnProductionDto;
    var RejectPost = new PCERejectPostDto {
            PCEId = Model.PCEId, 
            RejectionComment = "" 
    }; 
    ViewData["RejectPost"] = RejectPost; 
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6 col-xl-4">
                <div class="row align-items-center">        
                </div>
            </div>
            <div class="col-sm-6 col-xl-4">
                <h4 class="m-0">PCE Evaluation Detail</h4>
            </div>
            <div class="col-sm-6 col-xl-4">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("MyPCECases", "PCEEvaluation")">My PCE Cases</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("MyPCEs", "PCEEvaluation")">My PCE Evaluations</a></li>
                    <li class="breadcrumb-item active">Detail</li>
                </ol>
            </div>
        </div>
    </div>
</section>

<section class="content">
    <div class="container-fluid">     
        <div class="row">
            <!-- General Information -->
            <div class="col-md-6">
                <div class="card card-purple bg-light">
                    <div class="card-header bg-purple text-white">
                        <h3 class="card-title">General Information</h3>
                    </div>
                    <div class="card-body">
                        <dl class="row">
                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.ProductionLineOrEquipmentName)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.ProductionLineOrEquipmentName)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.OutputType)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.OutputType)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.OutputPhase)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.OutputPhase)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.WorkingDaysPerMonth)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.WorkingDaysPerMonth)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.EffectiveProductionHourType)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.EffectiveProductionHourType)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.EffectiveProductionHour)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.EffectiveProductionHour)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.ShiftsPerDay)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.ShiftsPerDay)</h6></dd>
                        </dl>
                    </div>
                </div>
                <div class="card bg-light mt-4">
                    <div class="card-header bg-purple text-white">
                        <h3 class="card-title">Shift Hours</h3>
                    </div>
                    <div class="card-body">
                        @if (Model.ShiftHours != null && Model.ShiftHours.Any())
                        {
                            <table class="table table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Start Time</th>
                                        <th>End Time</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var shift in Model.ShiftHours)
                                    {
                                        
                                        var startTime = new DateTime(1, 1, 1, shift.Start.Hours, shift.Start.Minutes, shift.Start.Seconds);
                                        var endTime = new DateTime(1, 1, 1, shift.End.Hours, shift.End.Minutes, shift.End.Seconds);
                                    
                                        <tr>
                                            <td>@startTime.ToString("hh:mm tt")</td>
                                            <td>@endTime.ToString("hh:mm tt")</td>
                                        </tr>
                                        @* <tr>
                                            <td>@shift.Start.ToString(@"h\:mm")</td>
                                            <td>@shift.End.ToString(@"h\:mm")</td>
                                        </tr> *@
                                    }
                                </tbody>
                            </table>
                        }
                        else
                        {
                            <p>No shift hours available.</p>
                        }
                    </div>
                </div>
                
                <!-- Inspection Information -->
                <div class="card bg-light">
                    <div class="card-header bg-purple text-white">
                        <h3 class="card-title">Inspection Information</h3>
                    </div>
                    <div class="card-body">
                        <dl class="row">
                            <dt class="col-sm-6">Inspection Started At</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.TimeConsumedToCheck.Start, new { @class = "datetime-format" })</h6></dd>

                            <dt class="col-sm-6">Inspection Ended At</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.TimeConsumedToCheck.End, new { @class = "datetime-format" })</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.InspectionPlace)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.InspectionPlace)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.InspectionDate)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.InspectionDate)</h6></dd>
                        </dl>
                    </div>
                </div>
            </div>

            <!-- Capacity Information -->
            <div class="col-md-6">
                <div class="card card-purple bg-light">
                    <div class="card-header bg-purple text-white">
                        <h3 class="card-title">Capacity Information</h3>
                    </div>
                    <div class="card-body">
                        <dl class="row">
                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.DesignProductionCapacity)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.DesignProductionCapacity)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.AttainableProductionCapacity)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.AttainableProductionCapacity)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.ActualProductionCapacity)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.ActualProductionCapacity)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.EstimatedProductionCapacity)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.EstimatedProductionCapacity)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.BottleneckProductionLineCapacity)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.BottleneckProductionLineCapacity)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.OverallActualCurrentPlantCapacity)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.OverallActualCurrentPlantCapacity)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.ProductionUnit)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.ProductionUnit)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.ProductionMeasurement)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.ProductionMeasurement)</h6></dd>
                        </dl>
                    </div>
                </div>

                <!-- Additional Information -->
                <div class="card card-purple bg-light">
                    <div class="card-header bg-purple text-white">
                        <h3 class="card-title">Additional Information</h3>
                    </div>
                    <div class="card-body">
                        <dl class="row">
                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.TechnicalObsolescenceStatus)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.TechnicalObsolescenceStatus)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.DepreciationRateApplied)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.DepreciationRateApplied)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.FactorsAffectingProductionCapacity)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.FactorsAffectingProductionCapacity)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.Discrepancies)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.Discrepancies)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.MachineFunctionalityStatus)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.MachineFunctionalityStatus)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.MachineNonFunctionalityReason)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.MachineNonFunctionalityReason)</h6></dd>

                            <dt class="col-sm-6">@Html.DisplayNameFor(model => model.OtherMachineNonFunctionalityReason)</dt>
                            <dd class="col-sm-6"><h6>@Html.DisplayFor(model => model.OtherMachineNonFunctionalityReason)</h6></dd>
                        </dl>
                    </div>
                </div>
            </div>
        
            <div class="card card-purple bg-light">
                <div class="card-header bg-purple text-white">
                    <h3 class="card-title">Supporting Documents</h3>
                </div>
                <div class="card-body">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>File Name</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                if (Model.SupportingEvidences == null || !Model.SupportingEvidences.Any())
                                {
                                    <tr>
                                        <td colspan="2">No Supporting Evidence related to this PCE Evaluation</td>
                                    </tr>
                                }
                                else
                                {
                                    foreach (var file in Model.SupportingEvidences)
                                    {
                                        <tr>
                                            <td>@file.Name</td>
                                            <td>
                                                <a href="@Url.Action("ViewFile", "UploadFile", new { id = file.Id })" target="_blank">View <i class="fas fa-eye"></i></a> |
                                                <a href="@Url.Action("DownloadFile", "UploadFile", new { id = file.Id })">Download <i class="fas fa-download"></i></a>
                                            </td>
                                        </tr>
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card card-purple bg-light">
                <div class="card-header bg-purple text-white">
                    <h3 class="card-title">Production Process Flow Diagrams</h3>
                </div>
                <div class="card-body">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>File Name</th>
                                <th>Actions</th>
                            </tr>
                        </thead>                         
                        <tbody>
                        
                            @{
                                if (Model.ProductionProcessFlowDiagrams == null || !Model.ProductionProcessFlowDiagrams.Any())
                                {
                                    <tr>
                                        <td colspan="2">No Production Process Flow Diagram related to this PCE Evaluation</td>
                                    </tr>
                                }
                                else
                                {
                                    foreach (var file in Model.ProductionProcessFlowDiagrams)
                                    {
                                        <tr>
                                            <td>@file.Name</td>
                                            <td>
                                                <a href="@Url.Action("ViewFile", "UploadFile", new { id = file.Id })" target="_blank">View <i class="fas fa-eye"></i></a> |
                                                <a href="@Url.Action("DownloadFile", "UploadFile", new { id = file.Id })">Download <i class="fas fa-download"></i></a>
                                            </td>
                                        </tr>
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="row col-12">
                <div class="col-2 action-btn" id="update-btn-container" style="margin-top:2rem;margin-bottom:1rem;margin-left:3rem;">  
                    <div class="row">     
                        <a href="@Url.Action("Update", "PCEEvaluation", new { Id = @Model.Id })" id="update-btn" class="col-xl-12 btn btn-sm btn-info">
                            <i class="fas fa-pen mr-2"></i> Update
                        </a>
                    </div>  
                </div>
                <div class="col-1"></div>
                <div class="col-2 action-btn" id="delete-btn-container" style="margin-top:2rem;margin-bottom:1rem;">
                    <div class="row"> 
                        <a href="@Url.Action("Delete", "PCEEvaluation", new { Id = @Model.Id })" id="delete-btn" class="col-xl-12 btn btn-sm btn-dark">
                            <i class="fas fa-trash-alt mr-2"></i> Delete
                        </a>
                    </div>    
                </div>
                <div class="col-1"></div>
                <div class="col-2 action-btn" id="reject-btn-container" style="margin-top:2rem;margin-bottom:1rem;">
                    <div class="row">
                        <button id="reject-btn" type="button" class="col-xl-12 btn btn-sm btn-danger" data-toggle="modal" data-target="#rejectionModal1">
                            <i class="fas fa-undo mr-2"></i> Return
                        </button>
                    </div>  
                </div>
                <div class="col-1"></div>    
                <div class="col-2 action-btn" id="evaluate-btn-container" style="margin-top:2rem;margin-bottom:1rem;">
                    <div class="row">     
                        <a href="@Url.Action("Evaluate", "PCEEvaluation", new { Id = @Model.Id })" id="evaluate-btn" class="col-xl-12 btn btn-sm btn-success">
                            <i class="fas fa-paper-plane mr-2"></i> Complete
                        </a>
                    </div> 
                </div>       
            </div>    
        </div>      
    </div>              
</section>

<style>
    .align-left {
        float: left;
    }
    .align-center {
        margin: 0 auto;
    }
    .align-right {
        float: right;
    }
</style>
  
@section Scripts {
    @{
        await Html.RenderPartialAsync("Partial/_PCEPartialScript");
        await Html.RenderPartialAsync("Partial/_RejectModal", ViewData["RejectPost"]);
        await Html.RenderPartialAsync("ScriptPartial/_ValidationScriptsPartial"); 
        await Html.RenderPartialAsync("ScriptPartial/_CommonLibrariesScriptPartial");
    }

    <Script>    
        document.addEventListener("DOMContentLoaded", function () { 
            var status = @myPCE.CurrentStatus ?? "Pending"; 
            if (status) {
                updateButtons(status);
            }
        });

        handleButtonClick(
            "evaluate-btn",
            "Are you sure you want to send this evaluation?",
            "Evaluation sent to RM successfully. Redirecting...",
            '@Url.Action("MyPCECases", "PCEEvaluation", new { Status = "Completed" })'
        );

        handleButtonClick(
            "delete-btn",
            "Are you sure you want to delete this evaluation?",
            "Evaluation is deleted successfully. Redirecting...",
            '@Url.Action("PCECaseDetail", "PCEEvaluation")?Id=@myPCE.PCECaseId'
        );

    </script> 
}