@model mechanical.Models.PCE.Dto.PCEEvaluationDto.PCEReturnPostDto

@{
    ViewData["Title"] = "Return PCE Evaluation";
}

<!-- Return Modal -->
<div class="modal fade" id="ReturnModal1" tabindex="-1" role="dialog" aria-labelledby="ReturnModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ReturnModalLabel">Return Reason</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form method="post" action="@Url.Action("Return", "PCEEvaluation")" id="ReturnForm">
                    @Html.AntiForgeryToken()
                     @Html.HiddenFor(model => model.PCEId)
                    <div class="form-group">
                        <label for="Reason">Reason</label>
                        <textarea class="form-control" asp-for="Reason" rows="3"></textarea>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-danger">Return</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var returnModal = document.getElementById('ReturnModal1');
        var returnForm = document.getElementById('ReturnForm');
        var reasonField = document.getElementById('Reason');

        returnModal.addEventListener('shown.bs.modal', function () {
            reasonField.focus();
        });

        returnForm.addEventListener('submit', function (event) {
            event.preventDefault();

            var formData = new FormData(returnForm);
            var actionUrl = returnForm.action;

            fetch(actionUrl, {
                method: returnForm.method,
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    toastr.success('Reason for Return saved successfully');
                    $(returnModal).modal('hide');

                    // Delay redirect for 2 seconds
                    setTimeout(function() {
                        window.location.href = '@Url.Action("ReturnedPCEEvaluations", "PCEEvaluation")';
                    }, 2000);
                } else {
                    toastr.error('Error saving Return Reason: ' + data.error);
                }
            })
            .catch(error => {
                toastr.error('Error saving Return Reason: ' + error);
            });
        });
    });
</script>
